{% comment %}
  Travel Collection Map Section
  Displays an interactive map with pins for each trip location
  Uses Leaflet for map functionality
{% endcomment %}

{%- liquid
  # Collect all products with valid coordinates
  assign mapped_products = ''
  for product in collection.products
    assign coordinates = product.metafields.trip.lodge_coordinates
    if coordinates != blank and coordinates contains ','
      if mapped_products != ''
        assign mapped_products = mapped_products | append: '###'
      endif

      assign image_url = ''
      if product.featured_image
        assign image_url = product.featured_image | image_url: width: 400
      endif

      assign mapped_products = mapped_products | append: product.id | append: '|||' | append: coordinates | append: '|||' | append: product.title | append: '|||' | append: product.url | append: '|||' | append: image_url
    endif
  endfor
-%}

{% if mapped_products != blank %}
<style>
  .travel-map {
    width: 100%;
    padding: 0;
  }

  .travel-map__container {
    width: 100%;
    height: {{ section.settings.map_height }}px;
    position: relative;
  }

  #travel-collection-map {
    width: 100%;
    height: 100%;
  }

  .travel-map__overlay {
    position: absolute;
    top: 60%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: rgba(255, 255, 255, 0.95);
    padding: 16px 24px;
    border-radius: 4px;
    font-size: 14px;
    font-weight: 600;
    color: #666666;
    pointer-events: none;
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.3s ease;
    box-shadow: 0 2px 8px rgba(0,0,0,0.15);
  }

  .travel-map__overlay.visible {
    opacity: 1;
  }

  /* Custom Trident Brand Marker */
  .custom-map-marker {
    background: none;
    border: none;
  }

  .marker-pin {
    width: 30px;
    height: 42px;
    position: relative;
    background-color: #3E90C5;
    border-radius: 50% 50% 50% 0;
    transform: rotate(-45deg);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
  }

  .marker-pin::after {
    content: '';
    width: 14px;
    height: 14px;
    position: absolute;
    background-color: #ffffff;
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .travel-map-popup {
    min-width: 220px;
  }

  .travel-map-popup__image {
    width: 100%;
    height: 140px;
    object-fit: cover;
    margin-bottom: 12px;
    border-radius: 4px;
    cursor: pointer;
    transition: opacity 0.2s ease;
  }

  .travel-map-popup__image:hover {
    opacity: 0.9;
  }

  .travel-map-popup__title-link {
    text-decoration: none;
    color: inherit;
  }

  .travel-map-popup__title {
    font-size: 18px;
    font-weight: 700;
    margin-bottom: 12px;
    color: #000000;
    line-height: 1.3;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    cursor: pointer;
    transition: color 0.2s ease;
  }

  .travel-map-popup__title-link:hover .travel-map-popup__title {
    color: #3E90C5;
  }

  .travel-map-popup__button {
    display: block;
    background-color: #3E90C5;
    color: #FFFFFF !important;
    padding: 12px 20px;
    text-decoration: none;
    font-size: 13px;
    font-weight: 700;
    text-transform: uppercase;
    border-radius: 0;
    transition: background-color 0.3s ease;
    text-align: center;
    letter-spacing: 1px;
  }

  .travel-map-popup__button:hover {
    background-color: #2E7AAC;
    color: #FFFFFF !important;
  }

  .leaflet-popup a.travel-map-popup__button {
    color: #FFFFFF !important;
  }

  .leaflet-popup-content {
    margin: 14px;
  }

  .leaflet-popup-content-wrapper {
    border-radius: 8px;
  }

  @media (max-width: 768px) {
    .travel-map__container {
      height: 400px;
    }
  }
</style>

<!-- Leaflet CSS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
  crossorigin=""/>

<section class="travel-map">
  <div class="travel-map__container">
    <div id="travel-collection-map"></div>
    <div class="travel-map__overlay" id="map-scroll-overlay">
      <span id="map-scroll-message">Use ⌘ + scroll to zoom the map</span>
    </div>
  </div>
</section>

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
  integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
  crossorigin=""></script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Detect OS for correct key display
    const isMac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;
    const keySymbol = isMac ? '⌘' : 'Ctrl';
    const scrollMessage = document.getElementById('map-scroll-message');
    scrollMessage.textContent = `Use ${keySymbol} + scroll to zoom the map`;

    const overlay = document.getElementById('map-scroll-overlay');

    // Product data from Liquid
    const productsData = '{{ mapped_products }}';
    console.log('Raw products data:', productsData);

    // Parse product data
    const products = productsData.split('###').map(function(item) {
      console.log('Processing item:', item);
      const parts = item.split('|||');
      console.log('Parts:', parts);

      if (parts.length < 5) {
        console.error('Not enough parts in item:', item);
        return null;
      }

      const coords = parts[1].split(',');

      return {
        id: parts[0],
        lat: parseFloat(coords[0].trim()),
        lng: parseFloat(coords[1].trim()),
        title: parts[2],
        url: parts[3],
        image: parts[4]
      };
    }).filter(function(product) {
      return product && !isNaN(product.lat) && !isNaN(product.lng);
    });

    console.log('Parsed products:', products);

    // Initialize map with scroll wheel zoom disabled and dragging enabled
    const map = L.map('travel-collection-map', {
      scrollWheelZoom: false,
      dragging: true
    });

    // Add tile layer
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
      maxZoom: 19
    }).addTo(map);

    // Custom Trident brand icon (using divIcon for custom colors)
    const customIcon = L.divIcon({
      className: 'custom-map-marker',
      html: `<div class="marker-pin"></div>`,
      iconSize: [30, 42],
      iconAnchor: [15, 42],
      popupAnchor: [0, -42]
    });

    // Add markers and collect bounds
    const bounds = [];
    products.forEach(function(product) {
      const marker = L.marker([product.lat, product.lng], { icon: customIcon }).addTo(map);

      // Create popup content
      const popupContent = `
        <div class="travel-map-popup">
          ${product.image ? `<a href="${product.url}"><img src="${product.image}" alt="${product.title}" class="travel-map-popup__image"></a>` : ''}
          <a href="${product.url}" class="travel-map-popup__title-link"><div class="travel-map-popup__title">${product.title}</div></a>
          <a href="${product.url}" class="travel-map-popup__button">View Lodge</a>
        </div>
      `;

      marker.bindPopup(popupContent);
      bounds.push([product.lat, product.lng]);
    });

    // Fit map to show all markers
    if (bounds.length > 0) {
      if (bounds.length === 1) {
        // For single lodge, zoom to state-level view (zoom 6)
        map.setView(bounds[0], 6);
      } else {
        // For multiple lodges, fit bounds with max zoom constraint
        map.fitBounds(bounds, {
          padding: [50, 50],
          maxZoom: {{ section.settings.max_zoom }}
        });
      }
    }

    // Handle Command/Control key for scroll zoom
    let commandPressed = false;

    document.addEventListener('keydown', function(e) {
      if (e.key === 'Meta' || e.key === 'Control') {
        commandPressed = true;
        map.scrollWheelZoom.enable();
      }
    });

    document.addEventListener('keyup', function(e) {
      if (e.key === 'Meta' || e.key === 'Control') {
        commandPressed = false;
        map.scrollWheelZoom.disable();
      }
    });

    // Show overlay when mouse is over map and key not pressed
    const mapContainer = document.getElementById('travel-collection-map');
    let overlayTimeout;

    mapContainer.addEventListener('mouseenter', function() {
      if (!commandPressed) {
        overlayTimeout = setTimeout(function() {
          overlay.classList.add('visible');
        }, 200);
      }
    });

    mapContainer.addEventListener('mouseleave', function() {
      clearTimeout(overlayTimeout);
      overlay.classList.remove('visible');
    });

    mapContainer.addEventListener('wheel', function(e) {
      if (!commandPressed) {
        // Allow page scroll to continue, don't let map capture the event
        overlay.classList.add('visible');
        clearTimeout(overlayTimeout);
        overlayTimeout = setTimeout(function() {
          overlay.classList.remove('visible');
        }, 2000);
      }
    }, { passive: true });

    // Hide overlay when key is pressed
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Meta' || e.key === 'Control') {
        overlay.classList.remove('visible');
      }
    });
  });
</script>
{% endif %}

{% schema %}
{
  "name": "Travel Map",
  "class": "travel-collection-map-section",
  "settings": [
    {
      "type": "header",
      "content": "Map Settings"
    },
    {
      "type": "paragraph",
      "content": "This section displays a map with pins for each trip location. Coordinates are pulled from product.metafields.trip.lodge_coordinates"
    },
    {
      "type": "range",
      "id": "map_height",
      "min": 300,
      "max": 800,
      "step": 50,
      "unit": "px",
      "label": "Map height",
      "default": 600
    },
    {
      "type": "range",
      "id": "max_zoom",
      "min": 5,
      "max": 18,
      "step": 1,
      "label": "Maximum zoom level",
      "default": 12,
      "info": "Lower numbers show a wider area"
    }
  ],
  "presets": [
    {
      "name": "Travel Collection Map"
    }
  ]
}
{% endschema %}
