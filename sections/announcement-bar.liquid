{%- capture section_settings -%}
{
  "showNewsletter": {{ section.settings.show_newsletter | json }},
  "interval": {{ section.settings.rotation_interval | json }},
  "showArrows": {{ section.settings.show_arrows | json }}
}
{%- endcapture -%}

<section
  id="shopify-section-{{ section.id }}"
  data-section-id="{{ section.id }}"
  data-section-type="announcement-bar"
  data-section-settings="{{ section_settings | escape_once }}"
>
  {%- if section.settings.show_newsletter -%}
    <div id="announcement-bar-newsletter" class="announcement-bar__newsletter hidden-phone" aria-hidden="true">
      <div class="container">
        <div class="announcement-bar__close-container">
          <button class="announcement-bar__close" data-action="toggle-newsletter">
            <span class="visually-hidden">{{ 'general.accessibility.close' | t }}</span>
            {%- render 'icon', icon: 'close' -%}
          </button>
        </div>
      </div>

      <div class="container container--extra-narrow">
        <div class="announcement-bar__newsletter-inner">
          {%- if section.settings.newsletter_title != blank -%}
            <h2 class="heading h1">{{ section.settings.newsletter_title | escape }}</h2>
          {%- endif -%}

          {%- if section.settings.newsletter_content != blank -%}
            <div class="rte">
              {{ section.settings.newsletter_content }}
            </div>
          {%- endif -%}

          {%- assign newsletter_id = 'newsletter-' | append: section.id -%}

          <div class="newsletter">
            {%- form 'customer', id: newsletter_id, class: 'form newsletter__form' -%}
              {%- if form.posted_successfully? -%}
                <p class="alert alert--success alert--center">{{ 'home_page.newsletter.success' | t }}</p>
                {%- if form.context == 'announcement-bar' -%}
                  {%- assign open_announcement = true -%}
                {%- endif -%}
              {%- else -%}
                {%- if form.errors -%}
                  <p class="alert alert--error">{{ form.errors.messages['email'] }}</p>
                {%- endif -%}

                <input type="hidden" name="contact[tags]" value="newsletter">
                <input type="hidden" name="contact[context]" value="announcement-bar">

                <div class="form__input-row">
                  <div class="form__input-wrapper form__input-wrapper--labelled">
                    <input type="email" id="announcement[contact][email]" name="contact[email]" class="form__field form__field--text" autofocus required>
                    <label for="announcement[contact][email]" class="form__floating-label">{{ 'home_page.newsletter.input' | t }}</label>
                  </div>

                  <button type="submit" class="form__submit button button--primary">{{ 'home_page.newsletter.submit' | t }}</button>
                </div>
              {%- endif -%}
            {%- endform -%}
          </div>
        </div>
      </div>
    </div>
  {%- endif -%}

  <div class="announcement-bar">
    <div class="container">
      <div class="announcement-bar__inner" aria-live="polite">
        <div class="announcement-content-group">
          {%- comment -%} Left Arrow {%- endcomment -%}
          {%- if section.blocks.size > 1 and section.settings.show_arrows -%}
            <button class="announcement-nav__btn annc-prev" type="button" aria-label="Previous message" title="Previous">‹</button>
          {%- endif -%}

          {%- comment -%} Rotator / Fallback {%- endcomment -%}
          <div class="announcement-rotator announcement-bar__content--center">
            {%- if section.blocks.size > 0 -%}
              {%- for block in section.blocks -%}
                {%- assign btext = block.settings.text | default: '' -%}
                {%- assign blink = block.settings.link -%}
                {%- if btext != blank -%}
                  <div class="announcement-slide{% if forloop.first %} is-active{% endif %}" data-index="{{ forloop.index0 }}" {{ block.shopify_attributes }} aria-hidden="{% if forloop.first %}false{% else %}true{% endif %}">
                    {%- if blink != blank -%}
                      <a href="{{ blink }}" class="announcement-bar__content">{{ btext | escape }}</a>
                    {%- else -%}
                      <p class="announcement-bar__content">{{ btext | escape }}</p>
                    {%- endif -%}
                  </div>
                {%- endif -%}
              {%- endfor -%}
            {%- else -%}
              {%- if section.settings.link != blank -%}
                <a href="{{ section.settings.link }}" class="announcement-bar__content announcement-bar__content--center">{{ section.settings.text | escape }}</a>
              {%- else -%}
                <p class="announcement-bar__content announcement-bar__content--center">{{ section.settings.text | escape }}</p>
              {%- endif -%}
            {%- endif -%}
          </div>

          {%- comment -%} Right Arrow {%- endcomment -%}
          {%- if section.blocks.size > 1 and section.settings.show_arrows -%}
            <button class="announcement-nav__btn annc-next" type="button" aria-label="Next message" title="Next">›</button>
          {%- endif -%}
        </div>

        {%- if section.settings.show_newsletter -%}
          <button type="button" class="announcement-bar__button hidden-phone" data-action="toggle-newsletter" aria-expanded="false" aria-controls="announcement-bar-newsletter">
            {%- render 'icon', icon: 'newsletter' -%}
            {{- section.settings.newsletter_button | escape -}}
          </button>
        {%- endif -%}
      </div>
    </div>
  </div>
</section>

<style>
  .announcement-bar {
    background: {{ section.settings.background }};
    color: {{ section.settings.text_color }};
    padding: 6px 0;
  }
  .announcement-rotator {
    position: relative;
    min-height: 1.5em; /* prevents layout shift between different heights */
    overflow: hidden;
    display: inline-block;
    width: auto;
  }
  .announcement-slide {
    display: none;
    align-items: center;
    justify-content: center;
    white-space: nowrap;
  }
  @media (max-width: 768px) {
    .announcement-slide {
      white-space: normal;
    }
  }
  .announcement-slide.is-active {
    display: flex;
    animation: fadeIn .35s ease;
  }
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(6px); }
    to { opacity: 1; transform: translateY(0); }
  }
  .announcement-bar__content {
    color: inherit;
    text-decoration: none;
    padding: 0 10px;
    text-align: center;
  }

  .announcement-nav__btn{
    background: transparent;
    border: none;
    cursor: pointer;
    font-size: 20px;
    padding: 0 5px;
    color: inherit;
    line-height: 1;
    flex-shrink: 0;
  }
  .announcement-nav__btn:hover{ opacity:.7; }

  .announcement-bar__inner {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0;
    position: relative;
    width: 100%;
  }

  .announcement-bar__button {
    position: absolute;
    right: 20px;
  }

  /* Center content group */
  .announcement-content-group {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0;
  }
</style>

<script>
  (function() {
    var sectionEl = document.getElementById('shopify-section-{{ section.id }}');
    if (!sectionEl) return;

    var slides = sectionEl.querySelectorAll('.announcement-slide');
    var inner = sectionEl.querySelector('.announcement-bar__inner');
    var prevBtn = sectionEl.querySelector('.annc-prev');
    var nextBtn = sectionEl.querySelector('.annc-next');
    var showNewsletter = {{ section.settings.show_newsletter | json }};
    var intervalSec = {{ section.settings.rotation_interval | json }};

    if (slides.length <= 1) {
      // still set CSS vars for layout parity
      setVars();
      window.addEventListener('resize', setVars);
      return;
    }

    var idx = 0, timer, isPaused = false;

    function setActive(next) {
      var current = sectionEl.querySelector('.announcement-slide.is-active');
      if (current) {
        current.classList.remove('is-active');
        current.setAttribute('aria-hidden', 'true');
      }
      slides[next].classList.add('is-active');
      slides[next].setAttribute('aria-hidden', 'false');
      idx = next;
    }

    function nextSlide() {
      if (isPaused) return;
      var n = (idx + 1) % slides.length;
      setActive(n);
    }

    function prevSlide() {
      if (isPaused) return;
      var n = (idx - 1 + slides.length) % slides.length;
      setActive(n);
    }

    function start() {
      stop();
      var ms = 5000; // Fixed 5 seconds
      timer = setInterval(nextSlide, ms);
    }

    function stop() {
      if (timer) clearInterval(timer);
      timer = null;
    }

    // Manual controls
    if (prevBtn) prevBtn.addEventListener('click', function(){
      var n = (idx - 1 + slides.length) % slides.length;
      setActive(n);
      start();
    });
    if (nextBtn) nextBtn.addEventListener('click', function(){
      var n = (idx + 1) % slides.length;
      setActive(n);
      start();
    });

    // Pause on hover/focus inside the bar
    if (inner) {
      inner.addEventListener('mouseenter', function(){ isPaused = true; });
      inner.addEventListener('mouseleave', function(){ isPaused = false; });
      inner.addEventListener('focusin', function(){ isPaused = true; });
      inner.addEventListener('focusout', function(){ isPaused = false; });

      // Optional: keyboard control
      inner.addEventListener('keydown', function(e){
        if (e.key === 'ArrowLeft') { e.preventDefault(); isPaused = true; prevSlide(); start(); }
        if (e.key === 'ArrowRight'){ e.preventDefault(); isPaused = true; nextSlide(); start(); }
      });
    }

    // Pause while newsletter is open
    if (showNewsletter) {
      var btn = sectionEl.querySelector('[data-action="toggle-newsletter"]');
      var drawer = document.getElementById('announcement-bar-newsletter');
      if (btn && drawer) {
        btn.addEventListener('click', function() {
          // Defer until attributes update
          setTimeout(function() {
            var isHidden = drawer.getAttribute('aria-hidden') === 'true';
            isPaused = !isHidden;
          }, 0);
        });
      }
    }

    // Kickoff
    setActive(0);
    start();

    // CSS vars for layout balance
    function setVars() {
      document.documentElement.style.setProperty('--announcement-bar-height', sectionEl.clientHeight + 'px');
      var btn = sectionEl.querySelector('.announcement-bar__button');
      if (btn) {
        document.documentElement.style.setProperty('--announcement-bar-button-width', btn.clientWidth + 'px');
      } else {
        document.documentElement.style.removeProperty('--announcement-bar-button-width');
      }
    }
    setVars();
    window.addEventListener('resize', setVars);
  })();
</script>

{% schema %}
{
  "name": "Announcement bar",
  "class": "shopify-section--announcement-bar",
  "settings": [
    { "type": "color", "id": "background", "label": "Background", "default": "#1e2d7d" },
    { "type": "color", "id": "text_color", "label": "Text", "default": "#ffffff" },

    /* Fallback single-message fields (used when no blocks are added) */
    { "type": "text", "id": "text", "label": "Fallback text", "default": "Announce something here" },
    {
      "type": "select",
      "id": "text_position",
      "label": "Text position",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" }
      ],
      "default": "left",
      "info": "Text is always centered on mobile."
    },
    { "type": "url", "id": "link", "label": "Fallback link" },

    { "type": "range", "id": "rotation_interval", "label": "Rotation interval (seconds)", "min": 2, "max": 30, "step": 1, "default": 6 },
    { "type": "checkbox", "id": "show_arrows", "label": "Show arrows", "default": true },

    { "type": "header", "content": "Newsletter" },
    {
      "type": "paragraph",
      "content": "Customers who subscribe will have their email address added to the \"accepts marketing\" customer list."
    },
    { "type": "paragraph", "content": "Only visible on desktop." },
    { "type": "checkbox", "id": "show_newsletter", "label": "Show sign up form", "default": true },
    { "type": "text", "id": "newsletter_button", "label": "Open button", "default": "Subscribe & Save", "visible_if": "{{ section.settings.show_newsletter }}" },
    { "type": "text", "id": "newsletter_title", "label": "Heading", "default": "Newsletter", "visible_if": "{{ section.settings.show_newsletter }}" },
    {
      "type": "richtext",
      "id": "newsletter_content",
      "label": "Text",
      "default": "<p>A short sentence describing what someone will receive by subscribing</p>",
      "visible_if": "{{ section.settings.show_newsletter }}"
    }
  ],
  "blocks": [
    {
      "type": "message",
      "name": "Message",
      "settings": [
        { "type": "text", "id": "text", "label": "Text", "default": "Free shipping over $49" },
        { "type": "url", "id": "link", "label": "Link" }
      ]
    }
  ],
  "max_blocks": 8,
  "presets": [
    {
      "name": "Announcement bar",
      "blocks": [
        { "type": "message", "settings": { "text": "Free shipping over $49" } },
        { "type": "message", "settings": { "text": "Subscribe & save 10%", "link": "/pages/newsletter" } }
      ]
    }
  ]
}
{% endschema %}
