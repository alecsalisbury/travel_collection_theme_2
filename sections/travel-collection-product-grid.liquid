{% comment %}
  Travel Collection Product Grid Section
  Displays products in a grid with filters sidebar
  Works with travel-collection-filters section
{% endcomment %}

{%- liquid
  assign products_per_row = section.settings.products_per_row | default: 3
-%}

<style>
  .travel-grid-wrapper {
    padding: 60px 20px;
  }

  .travel-grid-container {
    max-width: 1400px;
    margin: 0 auto;
    display: grid;
    grid-template-columns: 250px 1fr;
    gap: 40px;
  }

  .travel-grid__heading {
    font-size: 72px;
    font-weight: 700;
    text-transform: uppercase;
    margin-bottom: 16px;
    grid-column: 1 / -1;
  }

  .travel-grid__sidebar {
    grid-column: 1;
  }

  .travel-grid__content {
    grid-column: 2;
  }

  .travel-grid {
    display: grid;
    grid-template-columns: repeat({{ products_per_row }}, 1fr);
    gap: 24px;
  }

  .travel-product-card {
    background-color: #FFFFFF;
    border-radius: 0;
    overflow: hidden;
    transition: box-shadow 0.3s ease;
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .travel-product-card:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  }

  .travel-product-card__link {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
    text-decoration: none;
  }

  .travel-product-card__image-wrapper {
    position: relative;
    width: 100%;
    padding-bottom: 66.666%;
    overflow: hidden;
    background-color: #F5F5F5;
  }

  .travel-product-card__image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .travel-product-card__content {
    padding: 24px;
    position: relative;
    width: 100%;
    padding-bottom: 66.666%;
    overflow: hidden;
  }

  .travel-product-card__content-inner {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 24px;
    display: flex;
    flex-direction: column;
  }

  .travel-product-card__title {
    font-size: 20px;
    font-weight: 700;
    text-transform: uppercase;
    margin: 0 0 12px 0;
    color: #000000;
    line-height: 1.2;
  }

  .travel-product-card__features {
    display: flex;
    flex-direction: column;
    gap: 10px;
    flex: 1;
  }

  .travel-product-card__feature {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 14px;
    color: #666666;
  }

  .travel-product-card__feature-icon {
    width: 20px;
    height: 20px;
    color: #3E90C5;
    flex-shrink: 0;
  }

  .travel-product-card__more {
    font-size: 11px;
    color: #999999;
    text-decoration: none;
  }

  .travel-product-card__buttons {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0;
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 2;
  }

  .travel-product-card__button {
    padding: 16px;
    font-size: 12px;
    font-weight: 600;
    text-transform: uppercase;
    text-align: center;
    text-decoration: none;
    border-radius: 0;
    transition: all 0.3s ease;
    letter-spacing: 0.5px;
    border: none;
    position: relative;
  }

  .travel-product-card__button:first-child {
    border-right: 1px solid rgba(0,0,0,0.1);
  }

  .travel-product-card__button--view {
    background-color: #D8DFE6;
    color: #000000;
  }

  .travel-product-card__button--view:hover {
    background-color: #C8CED6;
  }

  .travel-product-card__button--plan {
    background-color: #3E90C5;
    color: #FFFFFF;
  }

  .travel-product-card__button--plan:hover {
    background-color: #2E7AAC;
  }

  .travel-grid__no-results {
    grid-column: 1 / -1;
    text-align: center;
    padding: 60px 20px;
    font-size: 18px;
    color: #666666;
  }

  @media (max-width: 1024px) {
    .travel-grid-container {
      grid-template-columns: 1fr;
      gap: 24px;
    }

    .travel-grid__sidebar {
      grid-column: 1;
    }

    .travel-grid__content {
      grid-column: 1;
    }

    .travel-grid {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  @media (max-width: 640px) {
    .travel-grid {
      grid-template-columns: 1fr;
    }

    .travel-grid__heading {
      font-size: 48px;
    }
  }

  .product-hidden {
    display: none !important;
  }
</style>

<div class="travel-grid-wrapper" id="trips">
  <div class="travel-grid-container">

    <h2 class="travel-grid__heading">{{ section.settings.grid_heading }}</h2>

    {% if section.settings.show_filters %}
    <div class="travel-grid__sidebar">
      {% render 'travel-collection-filters', section: section %}
    </div>
    {% endif %}

    <div class="travel-grid__content">
      <div class="travel-grid" id="travel-product-grid">
        {% for product in collection.products %}
          {%- liquid
            assign starting_price = product.metafields.trip.starting_price | default: product.price
            assign species_metafield = product.metafields.trip.trip_target_species.value
            assign wading_boating = product.metafields.trip.wading_boating
            assign who_its_for = product.metafields.trip.who_its_for.value
            assign family_friendly = product.metafields.trip.lodge_family_friendly

            # Get first species only
            assign first_species = ''
            if species_metafield != blank
              for species_obj in species_metafield limit: 1
                assign first_species = species_obj.species_name
              endfor
            endif

            # Build data attributes for filtering
            assign all_species_names = ''
            if species_metafield != blank
              for species_obj in species_metafield
                if all_species_names != ''
                  assign all_species_names = all_species_names | append: ','
                endif
                assign all_species_names = all_species_names | append: species_obj.species_name
              endfor
            endif

            assign all_who_its_for = ''
            if who_its_for
              for item in who_its_for
                if all_who_its_for != ''
                  assign all_who_its_for = all_who_its_for | append: ','
                endif
                assign all_who_its_for = all_who_its_for | append: item
              endfor
            endif
          -%}

          <div class="travel-product-card"
               data-product-id="{{ product.id }}"
               data-price="{{ starting_price | divided_by: 100.0 }}"
               data-species="{{ all_species_names }}"
               data-wading-boating="{{ wading_boating }}"
               data-who-its-for="{{ all_who_its_for }}"
               data-family-friendly="{{ family_friendly }}">

            <a href="{{ product.url }}" class="travel-product-card__link" aria-label="View {{ product.title }}"></a>

            <div class="travel-product-card__image-wrapper">
              {% if product.featured_image %}
                <img src="{{ product.featured_image | image_url: width: 600 }}"
                     alt="{{ product.title | escape }}"
                     class="travel-product-card__image"
                     loading="lazy">
              {% else %}
                {{ 'product-1' | placeholder_svg_tag: 'travel-product-card__image' }}
              {% endif %}
            </div>

            <div class="travel-product-card__content">
              <div class="travel-product-card__content-inner">
                <h3 class="travel-product-card__title">
                  {{ product.title }}
                </h3>

                <div class="travel-product-card__features">
                  {% if first_species != blank %}
                    <div class="travel-product-card__feature">
                      <svg class="travel-product-card__feature-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12 20c-4.41 0-8-2.69-8-6s3.59-6 8-6 8 2.69 8 6-3.59 6-8 6zm-7.15-3.29C4.33 17.03 4 17.49 4 18c0 .55.45 1 1 1h14c.55 0 1-.45 1-1 0-.51-.33-.97-.85-1.29-1.2-.74-2.97-1.71-5.15-1.71s-3.95.97-5.15 1.71zM12 4c-1.93 0-3.68.78-5 2.05C5.68 4.78 3.93 4 2 4v2c1.39 0 2.67.57 3.58 1.5.04.04.09.06.13.1.83.68 1.43 1.49 1.76 2.4H4c-.55 0-1 .45-1 1s.45 1 1 1h4.21c-.1.49-.16.99-.19 1.5h-.02c-1.65 0-3 1.35-3 3h3.5c.28 0 .5.22.5.5s-.22.5-.5.5H5c0 1.65 1.35 3 3 3h.02c.03.51.09 1.01.19 1.5H4c-.55 0-1 .45-1 1s.45 1 1 1h3.47c-.33.91-.93 1.72-1.76 2.4-.04.04-.09.06-.13.1C4.67 21.43 3.39 22 2 22v2c1.93 0 3.68-.78 5-2.05C8.32 23.22 10.07 24 12 24s3.68-.78 5-2.05c1.32 1.27 3.07 2.05 5 2.05v-2c-1.39 0-2.67-.57-3.58-1.5-.04-.04-.09-.06-.13-.1-.83-.68-1.43-1.49-1.76-2.4H20c.55 0 1-.45 1-1s-.45-1-1-1h-3.47c.1-.49.16-.99.19-1.5h.02c1.65 0 3-1.35 3-3h-3.5c-.28 0-.5-.22-.5-.5s.22-.5.5-.5H19c0-1.65-1.35-3-3-3h-.02c-.03-.51-.09-1.01-.19-1.5H20c.55 0 1-.45 1-1s-.45-1-1-1h-3.47c.33-.91.93-1.72 1.76-2.4.04-.04.09-.06.13-.1C19.33 6.57 20.61 6 22 6V4c-1.93 0-3.68.78-5 2.05C15.68 4.78 13.93 4 12 4z"/>
                      </svg>
                      <span>{{ first_species }}</span>
                    </div>
                  {% endif %}

                  {% if wading_boating != blank %}
                    <div class="travel-product-card__feature">
                      <svg class="travel-product-card__feature-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M20 21c-1.39 0-2.78-.47-4-1.32-2.44 1.71-5.56 1.71-8 0C6.78 20.53 5.39 21 4 21H2v-2h2c1.38 0 2.74-.35 4-.99 2.52 1.29 5.48 1.29 8 0 1.26.65 2.62.99 4 .99h2v2h-2zM3.95 19H4c1.6 0 3.02-.88 4-2 .98 1.12 2.4 2 4 2s3.02-.88 4-2c.98 1.12 2.4 2 4 2h.05l1.89-6.68c.08-.26.06-.54-.06-.78s-.34-.42-.6-.5L20 10.62V6c0-1.1-.9-2-2-2h-3V1H9v3H6c-1.1 0-2 .9-2 2v4.62l-1.29.42c-.26.08-.48.26-.6.5s-.15.52-.06.78L3.95 19zM6 6h12v3.97L12 8 6 9.97V6z"/>
                      </svg>
                      <span>{{ wading_boating }}</span>
                    </div>
                  {% endif %}

                  {% if family_friendly != blank %}
                    <div class="travel-product-card__feature">
                      <svg class="travel-product-card__feature-icon" fill="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path d="M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z"/>
                      </svg>
                      <span>{% if family_friendly == true or family_friendly == 'true' %}Family Friendly{% else %}Core Fisherman{% endif %}</span>
                    </div>
                  {% endif %}
                </div>

                <div class="travel-product-card__buttons">
                  <a href="{{ product.url }}" class="travel-product-card__button travel-product-card__button--view">
                    {{ section.settings.view_lodge_text }}
                  </a>
                  <button type="button" data-trip-inquiry-trigger data-trip-name="{{ product.title }}" class="travel-product-card__button travel-product-card__button--plan">
                    {{ section.settings.plan_trip_text }}
                  </button>
                </div>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>

      <div class="travel-grid__no-results" id="no-results-message" style="display: none;">
        No trips match your selected filters. Try adjusting your selections.
      </div>
    </div>

  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const productCards = document.querySelectorAll('.travel-product-card');
  const noResultsMessage = document.getElementById('no-results-message');

  // Calculate price percentiles
  const prices = Array.from(productCards).map(card => parseFloat(card.getAttribute('data-price'))).filter(p => !isNaN(p)).sort((a, b) => a - b);
  const percentile33 = prices[Math.floor(prices.length * 0.33)] || 0;
  const percentile66 = prices[Math.floor(prices.length * 0.66)] || 0;

  function getPriceRange(price) {
    if (price <= percentile33) return '1';
    if (price <= percentile66) return '2';
    return '3';
  }

  function applyFilters() {
    if (typeof window.getTravelFilters !== 'function') {
      return; // Filters not loaded yet
    }

    const filters = window.getTravelFilters();
    let visibleCount = 0;

    productCards.forEach(card => {
      let show = true;

      // Price filter
      if (filters.price.length > 0) {
        const productPrice = parseFloat(card.getAttribute('data-price'));
        const priceRange = getPriceRange(productPrice);
        if (!filters.price.includes(priceRange)) {
          show = false;
        }
      }

      // Species filter
      if (show && filters.species.length > 0) {
        const productSpecies = card.getAttribute('data-species').split(',').filter(s => s);
        const hasMatch = filters.species.some(filterSpecies => productSpecies.includes(filterSpecies));
        if (!hasMatch) {
          show = false;
        }
      }

      // Wading/Boating filter
      if (show && filters['wading-boating'].length > 0) {
        const productWB = card.getAttribute('data-wading-boating');
        if (!filters['wading-boating'].includes(productWB)) {
          show = false;
        }
      }

      // Who It's For filter
      if (show && filters['who-its-for'].length > 0) {
        const productWhoItsFor = card.getAttribute('data-who-its-for').split(',').filter(s => s);
        const hasMatch = filters['who-its-for'].some(filterItem => productWhoItsFor.includes(filterItem));
        if (!hasMatch) {
          show = false;
        }
      }

      // Family Friendly filter
      if (show && filters['family-friendly'].length > 0) {
        const productFF = card.getAttribute('data-family-friendly');
        if (!filters['family-friendly'].includes(productFF)) {
          show = false;
        }
      }

      if (show) {
        card.classList.remove('product-hidden');
        visibleCount++;
      } else {
        card.classList.add('product-hidden');
      }
    });

    // Show/hide no results message
    noResultsMessage.style.display = visibleCount === 0 ? 'block' : 'none';
  }

  // Listen for filter changes
  document.addEventListener('travelFiltersChanged', applyFilters);
});
</script>

{% schema %}
{
  "name": "Travel Product Grid",
  "class": "travel-collection-product-grid-section",
  "settings": [
    {
      "type": "header",
      "content": "Grid Settings"
    },
    {
      "type": "text",
      "id": "grid_heading",
      "label": "Grid heading",
      "default": "TRIPS"
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "label": "Show filters sidebar",
      "default": true,
      "info": "Requires travel-collection-filters section"
    },
    {
      "type": "range",
      "id": "products_per_row",
      "min": 2,
      "max": 4,
      "step": 1,
      "label": "Products per row (desktop)",
      "default": 3
    },
    {
      "type": "header",
      "content": "Buttons"
    },
    {
      "type": "text",
      "id": "view_lodge_text",
      "label": "View lodge button text",
      "default": "VIEW LODGE"
    },
    {
      "type": "text",
      "id": "plan_trip_text",
      "label": "Plan trip button text",
      "default": "PLAN MY TRIP"
    },
    {
      "type": "url",
      "id": "plan_trip_url",
      "label": "Plan trip button URL"
    }
  ],
  "presets": [
    {
      "name": "Travel Collection Product Grid"
    }
  ]
}
{% endschema %}
