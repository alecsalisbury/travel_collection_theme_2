{%- capture section_settings -%}
{
  "showShippingEstimator": {% if cart.item_count == 0 or cart.requires_shipping == false %}false{% else %}{{ section.settings.show_shipping_estimator | json }}{% endif %}
}
{%- endcapture -%}

<section data-section-id="{{ section.id }}" data-section-type="cart" data-section-settings="{{ section_settings | escape_once }}" data-item-count="{{ cart.item_count }}">
  {%- if cart.item_count == 0 -%}
    <div class="container">
      <div class="empty-state">
        <div class="empty-state__icon">
          {%- render 'icon', icon: 'big-cart' -%}
        </div>

        <p class="empty-state__heading heading h1">{{ 'cart.general.empty' | t }}</p>

        {%- if settings.cart_show_free_shipping_threshold -%}
          {%- assign threshold_in_cents = settings.cart_free_shipping_threshold | times: 100 -%}
          {%- capture remaining_amount -%}<span data-hulkapps-cart-total >{{ cart.total_price | minus: threshold_in_cents | abs | money }}</span>{%- endcapture -%}
          <p class="empty-state__description">{{ 'cart.general.free_shipping_remaining_html' | t: remaining_amount: remaining_amount }}</p>
        {%- endif -%}

        <div class="empty-state__button-container">
          <a href="{{ settings.cart_empty_button_link | default: routes.root_url }}" class="empty-state__button button button--primary">{{ 'cart.general.empty_button' | t }}</a>
        </div>
      </div>
    </div>
  {%- else -%}
    <div class="container">
      <header class="page__header page__header--stack" style="text-align: left;">
        <h1 class="page__title heading h1">{{ 'cart.general.title' | t }}</h1>
      </header>
    </div>

    <div class="cart-wrapper">
      <div class="cart-wrapper__inner">
        <div class="cart-wrapper__inner-inner">
          <div class="container container--flush">
            {%- comment -%}
            --------------------------------------------------------------------------------------
            FREE SHIPPING PROGRESS BAR (moved above products)
            --------------------------------------------------------------------------------------
            {%- endcomment -%}

            {%- if settings.cart_show_free_shipping_threshold -%}
              {%- assign threshold_in_cents = settings.cart_free_shipping_threshold | times: 100 -%}
              {%- assign progress_percentage = cart.total_price | times: 100 | divided_by: threshold_in_cents | at_most: 100 -%}

              <style>
                .cart-shipping-bar {
                  padding: 16px;
                }
                .cart-shipping-bar__text {
                  margin: 0 0 8px;
                  font-weight: 600;
                  font-size: 15px;
                  color: #333;
                }
                .cart-shipping-bar__progress {
                  width: 100%;
                  height: 10px;
                  background: #e0e0e0;
                  border-radius: 5px;
                  overflow: hidden;
                }
                @media screen and (max-width: 767px) {
                  .cart-shipping-bar {
                    padding: 10px 12px;
                  }
                  .cart-shipping-bar__text {
                    margin: 0 0 6px;
                    font-size: 13px;
                  }
                  .cart-shipping-bar__progress {
                    height: 8px;
                  }
                }
              </style>

              <div class="card" style="margin-bottom: 20px;">
                <div class="cart-shipping-bar">
                  <div style="text-align: center;">
                    {%- if cart.total_price >= threshold_in_cents -%}
                      <p class="cart-shipping-bar__text">{{ 'cart.general.free_shipping' | t }}</p>
                    {%- else -%}
                      {%- capture remaining_amount -%}<span data-hulkapps-cart-total>{{ cart.total_price | minus: threshold_in_cents | abs | money }}</span>{%- endcapture -%}
                      <p class="cart-shipping-bar__text">{{ 'cart.general.free_shipping_remaining_html' | t: remaining_amount: remaining_amount }}</p>
                    {%- endif -%}

                    <div class="cart-shipping-bar__progress">
                      <div style="width: {{ progress_percentage }}%; height: 100%; background: #4492C6; transition: width 0.3s ease;"></div>
                    </div>
                  </div>
                </div>
              </div>
            {%- endif -%}

            {%- comment -%}
            --------------------------------------------------------------------------------------
            LINE ITEMS
            --------------------------------------------------------------------------------------
            {%- endcomment -%}

            <div class="card">
              <div class="table-wrapper">
                <table class="line-item-table table table--loose">
                  <thead class="hidden-phone">
                    <tr>
                      <th>{{ 'customer.order.product' | t }}</th>
                      <th class="table__cell--center">{{ 'customer.order.quantity' | t }}</th>
                      <th class="table__cell--right">{{ 'customer.order.total' | t }}</th>
                    </tr>
                  </thead>

                  <tbody>
                    {%- assign gift_wrap_product = section.settings.gift_wrap_product -%}

                    {%- for line_item in cart.items -%}
                      <tr  data-hulkapps-lineitem class="line-item line-item--stack">
                        <td class="line-item__product-info">
                          <div class="line-item__product-info-wrapper">
                            <div class="line-item__image-wrapper">
                              {%- comment -%}For vertical images we force to contain them on a square ratio to avoid growing too large{%- endcomment -%}

                              {%- if line_item.image.aspect_ratio < 1 -%}
                                <div class="aspect-ratio aspect-ratio--square">
                                  <img loading="lazy" src="{{ line_item.image | img_url: '180x' }}" alt="{{ line_item.image.alt | escape }}">
                                </div>
                              {%- else -%}
                                <div class="aspect-ratio" style="padding-bottom: {{ 100.0 | divided_by: line_item.image.aspect_ratio }}%">
                                  <img loading="lazy" src="{{ line_item.image | img_url: '180x' }}" alt="{{ line_item.image.alt | escape }}">
                                </div>
                              {%- endif -%}
                            </div>

                            <div class="line-item__meta">
                              {%- if settings.show_vendor and gift_wrap_product.handle != line_item.product.handle -%}
                                {%- assign vendor_handle = line_item.product.vendor | handle -%}
                                {%- assign collection_for_vendor = collections[vendor_handle] -%}

                                {%- unless collection_for_vendor.empty? -%}
                                  <a class="line-item__vendor link" href="{{ collection_for_vendor.url }}">{{ line_item.product.vendor }}</a>
                                  {%- else -%}
                                  <a class="line-item__vendor link" href="{{ line_item.product.vendor | url_for_vendor }}">{{ line_item.product.vendor }}</a>
                                {%- endunless -%}
                              {%- endif -%}

                              {%- if gift_wrap_product.handle == line_item.product.handle -%}
                                <span class="line-item__title text--strong">{{ line_item.title }}</span>
                              {%- else -%}
                                <a href="{{ line_item.url }}" class="line-item__title link text--strong">{{ line_item.title }}</a>
                              {%- endif -%}

                              {%- if line_item.selling_plan_allocation -%}
                                <p class="line-item__plan-allocation">{{ line_item.selling_plan_allocation.selling_plan.name }}</p>
                              {%- endif -%}

                              {%- unless line_item.properties == blank -%}
                                <ul  data-hulkapps-line-properties class="line-item__property-list" role="list">
                                  {%- for property in line_item.properties -%}
                                    {%- assign first_character_in_key = property.first | truncate: 1, '' -%}

                                    {%- if property.last == blank or first_character_in_key == '_' -%}
                                      {%- continue -%}
                                    {%- endif -%}

                                    <li class="line-item__property">{{ property.first }}: {{ property.last }}</li>
                                  {%- endfor -%}
                                </ul>
<button type='button' style='display: none;' class='edit_cart_option btn btn--primary button' data-product_id='{{line_item.product_id}}' data-key='{{line_item.key}}' data-variant_id='{{line_item.variant_id}}' data-quantity='{{line_item.quantity}}'>Edit Options</button>
                              {%- endunless -%}

                              <div class="line-item__price-list">
                                {%- if line_item.original_price > line_item.final_price -%}
                                  {%- if line_item.final_price == 0 -%}
                                    <span class="line-item__price line-item__price--highlight">{{ 'cart.general.free' | t }}</span>
                                  {%- else -%}
                                    <span  data-hulkapps-ci-price data-key='{{line_item.key}}' class="line-item__price line-item__price--highlight">{{ line_item.final_price | money }}</span>
                                  {%- endif -%}

                                  <span  data-hulkapps-ci-price data-key='{{line_item.key}}' class="line-item__price line-item__price--compare">{{ line_item.original_price | money }}</span>
                                {%- elsif line_item.variant.compare_at_price > line_item.variant.price -%}
                                  {%- if line_item.final_price == 0 -%}
                                    <span class="line-item__price line-item__price--highlight">{{ 'cart.general.free' | t }}</span>
                                  {%- else -%}
                                    <span  data-hulkapps-ci-price data-key='{{line_item.key}}' class="line-item__price line-item__price--highlight">{{ line_item.final_price | money }}</span>
                                  {%- endif -%}

                                  <span class="line-item__price line-item__price--compare">{{ line_item.variant.compare_at_price | money }}</span>
                                {%- else -%}
                                  {%- if line_item.final_price == 0 -%}
                                    <span class="line-item__price">{{ 'cart.general.free' | t }}</span>
                                  {%- else -%}
                                    <span  data-hulkapps-ci-price data-key='{{line_item.key}}' class="line-item__price">{{ line_item.final_price | money }}</span>
                                  {%- endif -%}
                                {%- endif -%}
                              </div>

                              {%- if line_item.unit_price_measurement -%}
                                <div class="line-item__price-info">
                                  <div class="unit-price-measurement">
                                    <span class="unit-price-measurement__price">{{ line_item.unit_price | money }}</span>
                                    <span class="unit-price-measurement__separator">/ </span>

                                    {%- if line_item.unit_price_measurement.reference_value != 1 -%}
                                      <span class="unit-price-measurement__reference-value">{{ line_item.unit_price_measurement.reference_value }}</span>
                                    {%- endif -%}

                                    <span class="unit-price-measurement__reference-unit">{{ line_item.unit_price_measurement.reference_unit }}</span>
                                  </div>
                                </div>
                              {%- endif -%}

                              {%- if line_item.line_level_discount_allocations != blank -%}
                                <ul class="line-item__discount-list" role="list">
                                  {%- for discount_allocation in line_item.line_level_discount_allocations -%}
                                    <li class="line-item__discount">
                                      {%- render 'icon', icon: 'sale' -%}{{ discount_allocation.discount_application.title }} (-{{ discount_allocation.amount | money }})
                                    </li>
                                  {%- endfor -%}
                                </ul>
                              {%- endif -%}

                              <div class="line-item__quantity hidden-tablet-and-up">
                                {%- comment -%}If the product has the tag "__gift", we remove the price{%- endcomment -%}

                                {%- unless line_item.product.tags contains '__gift' -%}
                                  <div class="quantity-selector">
                                    {% liquid
                                      assign max_quantity = ''
                                      assign variant = line_item.variant

                                      if variant.inventory_management != blank and variant.inventory_policy == 'deny'
                                        assign current_quantity_for_variant = cart | item_count_for_variant: variant.id
                                        assign max_quantity = variant.inventory_quantity | minus: current_quantity_for_variant | plus: line_item.quantity
                                      endif

                                      if variant.quantity_rule.max != nil
                                        assign max_quantity = max_quantity | default: 999999 | at_most: variant.quantity_rule.max
                                      endif

                                      assign increment = line_item.quantity | plus: line_item.variant.quantity_rule.increment

                                      if line_item.variant.quantity_rule.max != nil
                                        assign increment = increment | at_most: line_item.variant.quantity_rule.max
                                      endif

                                      assign reduce_quantity = line_item.quantity | minus: line_item.variant.quantity_rule.increment | at_least: 0

                                      if line_item.variant.inventory_management == 'shopify'
                                        assign reduce_quantity = reduce_quantity | at_most: line_item.variant.inventory_quantity
                                      endif
                                    %}

                                    <button type="button" class="quantity-selector__button" data-action="decrease-quantity" data-href="{{ routes.cart_change_url }}?quantity={{ reduce_quantity }}&line={{ forloop.index }}" data-quantity="{{ line_item.quantity | minus: line_item.variant.quantity_rule.increment | at_least: 0 }}" data-line="{{ forloop.index }}" aria-label="{{ 'cart.items.decrease_quantity' | t }}" title="{{ 'cart.items.decrease_quantity' | t }}">{% render 'icon', icon: 'minus' %}</button>
                                    <input aria-label="{{ 'product.form.quantity' | t }}" type="number" class="quantity-selector__value" inputmode="numeric" data-current-value="{{ line_item.quantity }}" data-line="{{ forloop.index }}" value="{{ line_item.quantity }}" step="{{ line_item.variant.quantity_rule.increment }}" min="{{ line_item.variant.quantity_rule.min }}" {% if line_item.variant.quantity_rule.max != nil %}max="{{ line_item.variant.quantity_rule.max }}"{% endif %}>
                                    <button type="button" class="quantity-selector__button" data-action="increase-quantity" data-href="{{ routes.cart_change_url }}?quantity={{ increment }}&line={{ forloop.index }}" data-quantity="{{ increment }}" data-line="{{ forloop.index }}" {% if max_quantity == blank or line_item.quantity < max_quantity %}aria-label="{{ 'cart.items.increase_quantity' | t }}" title="{{ 'cart.items.increase_quantity' | t }}"{% else %}disabled="disabled" aria-label="{{ 'cart.items.no_more_stock' | t }}" data-tooltip="{{ 'cart.items.no_more_stock' | t }}" data-tooltip-position="bottom-left"{% endif %}>{% render 'icon', icon: 'plus' %}</button>
                                  </div>
                                {%- else -%}
                                  <span>{{ line_item.quantity }}</span>
                                {% endunless -%}

                                <a href="{{ routes.cart_change_url }}?quantity=0&line={{ forloop.index }}" data-action="decrease-quantity" data-quantity="0" data-line="{{ forloop.index }}" class="line-item__quantity-remove link">{{ 'cart.items.remove' | t }}</a>
                              </div>
                            </div>
                          </div>
                        </td>

                        <td class="line-item__quantity table__cell--center hidden-phone">
                          {%- comment -%}If the product has the tag "__gift", we remove the price{%- endcomment -%}

                          {%- unless line_item.product.tags contains '__gift' -%}
                            <div class="quantity-selector">
                              {% liquid
                                assign max_quantity = ''
                                assign variant = line_item.variant

                                if variant.inventory_management != blank and variant.inventory_policy == 'deny'
                                  assign current_quantity_for_variant = cart | item_count_for_variant: variant.id
                                  assign max_quantity = variant.inventory_quantity | minus: current_quantity_for_variant | plus: line_item.quantity
                                endif

                                if variant.quantity_rule.max != nil
                                  assign max_quantity = max_quantity | default: 999999 | at_most: variant.quantity_rule.max
                                endif

                                assign increment = line_item.quantity | plus: line_item.variant.quantity_rule.increment

                                if line_item.variant.quantity_rule.max != nil
                                  assign increment = increment | at_most: line_item.variant.quantity_rule.max
                                endif

                                assign reduce_quantity = line_item.quantity | minus: line_item.variant.quantity_rule.increment | at_least: 0

                                if line_item.variant.inventory_management == 'shopify'
                                  assign reduce_quantity = reduce_quantity | at_most: line_item.variant.inventory_quantity
                                endif
                              %}

                              <button type="button" class="quantity-selector__button" data-action="decrease-quantity" data-href="{{ routes.cart_change_url }}?quantity={{ reduce_quantity }}&line={{ forloop.index }}" data-quantity="{{ line_item.quantity | minus: line_item.variant.quantity_rule.increment | at_least: 0 }}" data-line="{{ forloop.index }}" aria-label="{{ 'cart.items.decrease_quantity' | t }}" title="{{ 'cart.items.decrease_quantity' | t }}">{% render 'icon', icon: 'minus' %}</button>
                              <input aria-label="{{ 'product.form.quantity' | t }}" type="number" class="quantity-selector__value" inputmode="numeric" data-current-value="{{ line_item.quantity }}" data-line="{{ forloop.index }}" value="{{ line_item.quantity }}" step="{{ line_item.variant.quantity_rule.increment }}" min="{{ line_item.variant.quantity_rule.min }}" {% if line_item.variant.quantity_rule.max != nil %}max="{{ line_item.variant.quantity_rule.max }}"{% endif %}>
                              <button type="button" class="quantity-selector__button" data-action="increase-quantity" data-href="{{ routes.cart_change_url }}?quantity={{ increment }}&line={{ forloop.index }}" data-quantity="{{ increment }}" data-line="{{ forloop.index }}" {% if max_quantity == blank or line_item.quantity < max_quantity %}aria-label="{{ 'cart.items.increase_quantity' | t }}" title="{{ 'cart.items.increase_quantity' | t }}"{% else %}disabled="disabled" aria-label="{{ 'cart.items.no_more_stock' | t }}" data-tooltip="{{ 'cart.items.no_more_stock' | t }}" data-tooltip-position="bottom-left"{% endif %}>{% render 'icon', icon: 'plus' %}</button>
                            </div>
                          {%- else -%}
                            <span>{{ line_item.quantity }}</span>
                          {%- endunless -%}

                          <a href="{{ routes.cart_change_url }}?quantity=0&line={{ forloop.index }}" data-action="decrease-quantity" data-quantity="0" data-line="{{ forloop.index }}" class="line-item__quantity-remove link">{{ 'cart.items.remove' | t }}</a>
                        </td>

                        <td class="line-item__line-price table__cell--right hidden-phone">
                          {%- if line_item.final_line_price == 0 -%}
                            {{- 'cart.general.free' | t -}}
                          {%- else -%}
                            <span data-hulkapps-line-price data-key='{{line_item.key}}' >{{ line_item.final_line_price | money }}</span>
                          {%- endif -%}
                        </td>
                      </tr>
                    {%- endfor -%}
                  </tbody>
                </table>
              </div>
            </div>

            {%- comment -%}
            --------------------------------------------------------------------------------------
            GIFT WRAP
            --------------------------------------------------------------------------------------
            {%- endcomment -%}

            {%- assign gift_wrap_product = section.settings.gift_wrap_product -%}

            {%- unless gift_wrap_product == blank or gift_wrap_product.available == false -%}
              {%- comment -%}We also have to do another check to make sure the gift wrap product is not already in the cart{%- endcomment -%}

              {%- assign gift_wrap_in_cart = false -%}

              {%- for line_item in cart.items -%}
                {%- if line_item.product_id == gift_wrap_product.id -%}
                  {%- assign gift_wrap_in_cart = true -%}
                  {%- break -%}
                {%- endif -%}
              {%- endfor -%}

              {%- unless gift_wrap_in_cart -%}
                <div class="card">
                  <div class="gift-wrap">
                    <div class="gift-wrap__left">
                      <span class="gift-wrap__icon">{% render 'icon', icon: 'bi-gift-wrap' %}</span>

                      <p class="gift-wrap__text">
                        <span class="text--strong">{{ section.settings.gift_wrap_text | escape }}</span>

                        {%- if gift_wrap_product.price == 0 -%}
                          <span>{{ 'cart.general.free' | t }}</span>
                        {%- else -%}
                          {%- capture gift_wrap_product_price -%}<span>{{ gift_wrap_product.price | money }}</span>{%- endcapture -%}
                          <span>{{ 'cart.gift_wrap.price_html' | t: price: gift_wrap_product_price }}</span>
                        {%- endif -%}
                      </p>
                    </div>

                    {%- form 'product', gift_wrap_product, class: 'gift-wrap__form' -%}
                      <input type="hidden" name="quantity" value="1">
                      <input type="hidden" name="id" data-sku="{{ gift_wrap_product.first_available_variant.sku }}" value="{{ gift_wrap_product.first_available_variant.id }}">

                      <buy-button class="buy-button">
                        <button type="submit" class="button button--secondary">{{ section.settings.gift_wrap_button | escape }}</button>
                      </buy-button>
                    {%- endform -%}
                  </div>
                </div>
              {%- endunless -%}
            {%- endunless -%}

            {%- comment -%}
            --------------------------------------------------------------------------------------
            SHIPPING ESTIMATOR
            --------------------------------------------------------------------------------------
            {%- endcomment -%}

            {%- assign items_requiring_shipping = cart.items | where: 'requires_shipping' -%}

            {%- if section.settings.show_shipping_estimator and items_requiring_shipping.size > 0 -%}
              <div class="card">
                <div class="estimate-shipping">
                  <button type="button" class="estimate-shipping__toggle" data-action="toggle-collapsible" data-collapsible-force-overflow aria-expanded="false" aria-controls="shipping-estimator">
                    <span class="estimate-shipping__icon">{% render 'icon', icon: 'bi-fast-delivery' %}</span>
                    <span class="estimate-shipping__text">{{ 'cart.shipping_estimator.title' | t }}</span>
                    <span class="estimate-shipping__arrow">{% render 'icon', icon: 'arrow-bottom' %}</span>
                  </button>

                  <div id="shipping-estimator" class="estimate-shipping__collapsible collapsible">
                    <div class="shipping-estimator form" role="form">
                      <div class="form__input-row">
                        <div class="form__input-wrapper">
                          <label for="shipping-estimator-country" class="form__label form__label--light">{{ 'cart.shipping_estimator.country' | t }}</label>

                          <div class="select-wrapper select-wrapper--primary">
                            {%- render 'icon', icon: 'arrow-bottom' -%}

                            <select name="country" id="shipping-estimator-country" data-default="{{ customer.default_address.country | default: section.settings.shipping_estimator_default_country }}" required>
                              {{- country_option_tags -}}
                            </select>
                          </div>
                        </div>

                        <div class="form__input-wrapper" style="display: none">
                          <label for="shipping-estimator-province" class="form__label form__label--light">{{ 'cart.shipping_estimator.province' | t }}</label>

                          <div class="select-wrapper select-wrapper--primary">
                            {%- render 'icon', icon: 'arrow-bottom' -%}

                            <select name="province" id="shipping-estimator-province" data-default="{{ customer.default_address.province }}"></select>
                          </div>
                        </div>

                        <div class="form__input-wrapper" style="max-width: 155px">
                          <label for="shipping-estimator-zip" class="form__label form__label--light">{{ 'cart.shipping_estimator.zip_code' | t }}</label>
                          <input type="text" name="zip" id="shipping-estimator-zip" class="form__field form__field--text" value="{{ customer.default.address.zip }}" required>
                        </div>

                        <div class="form__input-wrapper hidden-phone">
                          <button type="button" class="form__submit button button--secondary" data-action="estimate-shipping">{{ 'cart.shipping_estimator.estimate' | t }}</button>
                        </div>
                      </div>

                      <button type="button" class="form__submit button button--secondary hidden-tablet-and-up" data-action="estimate-shipping">{{ 'cart.shipping_estimator.estimate' | t }}</button>

                      <div class="shipping-estimator__results" style="display: none;"></div>
                    </div>
                  </div>
                </div>
              </div>
            {%- endif -%}

            {%- comment -%}
            --------------------------------------------------------------------------------------
            RECAP
            --------------------------------------------------------------------------------------
            {%- endcomment -%}

            <form class="cart-recap" method="post" action="{{ routes.cart_url }}" novalidate="novalidate" data-item-count="{{ cart.item_count }}">
              <div class="cart-recap__scroller">
                <style>
                  .cart-rewards-section {
                    padding: 0 0 20px 0;
                    text-align: center;
                    border-bottom: 1px solid #e5e5e5;
                    margin-bottom: 20px;
                  }
                  .cart-rewards-section__heading {
                    font-size: 18px;
                    font-weight: 700;
                    color: #333;
                    margin: 0 0 10px;
                  }
                  .cart-rewards-section__links {
                    margin-bottom: 16px;
                    font-size: 14px;
                  }
                  .cart-rewards-section__links a {
                    color: #4492C6;
                    font-weight: 600;
                    text-decoration: none;
                  }
                  .cart-rewards-section__links a:hover {
                    text-decoration: underline;
                  }
                  .cart-rewards-section__links .separator {
                    margin: 0 4px;
                    color: #333;
                  }
                  .cart-rewards-section__benefits {
                    display: flex;
                    justify-content: space-around;
                    align-items: flex-start;
                    gap: 16px;
                  }
                  .cart-rewards-section__benefit {
                    flex: 1;
                    text-align: center;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                  }
                  .cart-rewards-section__benefit:not(:last-child) {
                    border-right: 1px solid #e5e5e5;
                  }
                  .cart-rewards-section__benefit-icon {
                    width: 36px;
                    height: 36px;
                    margin-bottom: 6px;
                    color: #4492C6;
                  }
                  .cart-rewards-section__benefit-text {
                    font-size: 12px;
                    font-weight: 600;
                    color: #333;
                    line-height: 1.3;
                  }
                  .cart-rewards-section__benefit a,
                  .cart-rewards-section__benefit button {
                    text-decoration: none;
                    color: inherit;
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                    cursor: pointer;
                  }
                  .cart-rewards-section__benefit a:hover .cart-rewards-section__benefit-icon,
                  .cart-rewards-section__benefit button:hover .cart-rewards-section__benefit-icon {
                    color: #3a7eb0;
                  }
                  @media screen and (max-width: 767px) {
                    .cart-rewards-section {
                      padding: 16px 0;
                    }
                    .cart-rewards-section__heading {
                      font-size: 14px;
                    }
                    .cart-rewards-section__benefits {
                      gap: 12px;
                    }
                    .cart-rewards-section__benefit-icon {
                      width: 28px;
                      height: 28px;
                    }
                    .cart-rewards-section__benefit-text {
                      font-size: 11px;
                    }
                  }

                  /* Modal styles */
                  .cart-modal {
                    display: none;
                    position: fixed;
                    z-index: 2147483647 !important;
                    left: 0;
                    top: 0;
                    width: 100vw;
                    height: 100vh;
                    background-color: rgba(0, 0, 0, 0.75);
                    backdrop-filter: blur(4px);
                    animation: fadeIn 0.2s ease-out;
                  }
                  @keyframes fadeIn {
                    from { opacity: 0; }
                    to { opacity: 1; }
                  }
                  @keyframes slideUp {
                    from {
                      opacity: 0;
                      transform: translateY(20px);
                    }
                    to {
                      opacity: 1;
                      transform: translateY(0);
                    }
                  }
                  .cart-modal.active {
                    display: flex !important;
                    align-items: center;
                    justify-content: center;
                  }
                  body.modal-open {
                    overflow: hidden !important;
                  }
                  .cart-modal__content {
                    background-color: white;
                    padding: 40px;
                    border-radius: 12px;
                    max-width: 700px;
                    max-height: 85vh;
                    overflow-y: auto;
                    position: relative;
                    margin: 20px;
                    z-index: 2147483647 !important;
                    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
                    animation: slideUp 0.3s ease-out;
                  }
                  .cart-modal__close {
                    position: absolute;
                    top: 20px;
                    right: 20px;
                    font-size: 32px;
                    font-weight: normal;
                    color: #999;
                    cursor: pointer;
                    border: none;
                    background: none;
                    padding: 5px 10px;
                    line-height: 1;
                    z-index: 1;
                    transition: all 0.2s ease;
                    border-radius: 4px;
                  }
                  .cart-modal__close:hover {
                    color: #333;
                    background: #f5f5f5;
                  }
                  .cart-modal__title {
                    font-size: 28px;
                    font-weight: 700;
                    margin: 0 0 24px 0;
                    color: #1a1a1a;
                    position: relative;
                    z-index: 1;
                    padding-right: 40px;
                    border-bottom: 2px solid #4492C6;
                    padding-bottom: 16px;
                  }
                  .cart-modal__body {
                    font-size: 15px;
                    line-height: 1.7;
                    color: #444;
                    position: relative;
                    z-index: 1;
                  }
                  .cart-modal__body p {
                    margin-bottom: 16px;
                  }
                  .cart-modal__body p:last-child {
                    margin-bottom: 0;
                  }
                  .cart-modal__body strong {
                    color: #1a1a1a;
                    font-weight: 600;
                  }
                  .cart-modal__body a {
                    color: #4492C6;
                    text-decoration: none;
                    font-weight: 500;
                    transition: color 0.2s ease;
                  }
                  .cart-modal__body a:hover {
                    color: #3a7eb0;
                    text-decoration: underline;
                  }
                  .cart-modal__body ol,
                  .cart-modal__body ul {
                    margin: 16px 0;
                    padding-left: 24px;
                  }
                  .cart-modal__body li {
                    margin-bottom: 12px;
                  }
                  .cart-modal__body h3 {
                    font-size: 20px;
                    font-weight: 600;
                    color: #1a1a1a;
                    margin: 28px 0 12px 0;
                  }
                  .cart-modal__body h3:first-child {
                    margin-top: 0;
                  }
                  @media screen and (max-width: 767px) {
                    .cart-modal__content {
                      padding: 30px 20px;
                      margin: 10px;
                      max-height: 90vh;
                      border-radius: 8px;
                    }
                    .cart-modal__title {
                      font-size: 24px;
                      padding-bottom: 12px;
                      margin-bottom: 20px;
                    }
                    .cart-modal__body {
                      font-size: 14px;
                    }
                    .cart-modal__close {
                      top: 15px;
                      right: 15px;
                      font-size: 28px;
                    }
                  }

                  /* Fix font consistency for tax/shipping notice */
                  .cart-recap__notices.rte p {
                    font-family: inherit;
                    font-size: 13px;
                    line-height: 1.5;
                  }
                </style>

                <div class="card">
                  <div class="card__section">
                    <div class="cart-rewards-section">
                      {%- if customer -%}
                        <p class="cart-rewards-section__heading">You're earning points on this order!</p>
                        <div class="cart-rewards-section__links">
                          <a href="/pages/rewards" target="_blank">View your points</a>
                        </div>
                      {%- else -%}
                        <p class="cart-rewards-section__heading">Earn 5 points for every $1 spent.*</p>
                        <div class="cart-rewards-section__links">
                          <a href="/customer_authentication/redirect?locale=en&region_country=US">Join free</a>
                          <span class="separator">or</span>
                          <a href="/customer_authentication/redirect?locale=en&region_country=US">Sign in</a>
                        </div>
                      {%- endif -%}
                      <div class="cart-rewards-section__benefits">
                        <div class="cart-rewards-section__benefit">
                          <a href="/pages/rewards" target="_blank">
                            <svg class="cart-rewards-section__benefit-icon" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                              <path d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span class="cart-rewards-section__benefit-text">Members Earn<br>Rewards</span>
                          </a>
                        </div>
                        <div class="cart-rewards-section__benefit">
                          <button type="button" onclick="openReturnsModal(); return false;" style="background: none; border: none; padding: 0; cursor: pointer; display: flex; flex-direction: column; align-items: center; width: 100%;">
                            <svg class="cart-rewards-section__benefit-icon" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                              <path d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span class="cart-rewards-section__benefit-text">30-Day<br>Returns</span>
                          </button>
                        </div>
                        <div class="cart-rewards-section__benefit">
                          <button type="button" onclick="openPriceMatchModal(); return false;" style="background: none; border: none; padding: 0; cursor: pointer; display: flex; flex-direction: column; align-items: center; width: 100%;">
                            <svg class="cart-rewards-section__benefit-icon" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                              <path d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            <span class="cart-rewards-section__benefit-text">Lowest Price<br>Guarantee</span>
                          </button>
                        </div>
                      </div>
                    </div>
                    {%- if cart.cart_level_discount_applications != blank -%}
                      {%- for discount_application in cart.cart_level_discount_applications -%}
                        <div class="cart-recap__price-line cart-recap__price-line--highlight text--pull">
                          <span class="cart-recap__price-line-label">{{ discount_application.title }}</span>
                          <span class="cart-recap__price-line-price">-{{ discount_application.total_allocated_amount | money }}</span>
                        </div>
                      {%- endfor -%}
                    {%- endif -%}

                    <div class="cart-recap__price-line text--pull">
                      <span class="cart-recap__price-line-label">{{ 'cart.general.total' | t }}</span>
                      <span  data-hulkapps-cart-total class="cart-recap__price-line-price">{{ cart.total_price | money_with_currency }}</span>
                    </div>

                    {%- comment -%}
                    To calculate the total discount, we take into account the Shopify Script (for Plus merchants), but we also add the compare at price as
                    well as potential automatic discounts at cart level
                    {%- endcomment -%}

                    {%- assign total_discount = 0 -%}

                    {%- for line_item in cart.items -%}
                      {%- if line_item.final_line_price < line_item.original_line_price -%}
                        {%- assign total_discount = total_discount | plus: line_item.total_discount -%}
                      {%- elsif line_item.variant.compare_at_price > line_item.variant.price -%}
                        {%- assign line_discount = line_item.variant.compare_at_price | minus: line_item.variant.price | times: line_item.quantity -%}
                        {%- assign total_discount = total_discount | plus: line_discount -%}
                      {%- endif -%}
                    {%- endfor -%}

                    {%- for discount_application in cart.cart_level_discount_applications -%}
                      {%- assign total_discount = total_discount | plus: discount_application.total_allocated_amount -%}
                    {%- endfor -%}

                    {%- if total_discount > 0 -%}
                      {%- capture amount_saved -%}<span>{{ total_discount | money }}</span>{%- endcapture -%}
                      <span class="cart-recap__amount-saved">{{ 'cart.general.amount_saved_html' | t: amount_saved: amount_saved }}</span>
                    {%- endif -%}

                    {%- if section.settings.enable_order_notes -%}
                      <div class="cart-recap__note">
                        <button type="button" class="cart-recap__note-button" data-action="toggle-collapsible" data-collapsible-force-overflow aria-controls="order-note" aria-expanded="false">
                          {{- 'cart.general.note_title' | t -}}
                          <span>
                            <span class="cart-recap__note-edit {% if cart.note != blank %}is-visible{% endif %}">{{ 'cart.general.edit_note' | t }}</span>
                            {%- render 'icon', icon: 'arrow-bottom' -%}
                          </span>
                        </button>

                        <div id="order-note" class="collapsible" aria-hidden="true">
                          <div class="cart-recap__note-inner">
                            <textarea name="note" class="form__field form__field--textarea" rows="3">{{ cart.note }}</textarea>
                            <button type="button" class="form__submit form__submit--tight button button--secondary" data-action="save-note">{{ 'cart.general.save_note' | t }}</button>
                          </div>
                        </div>
                      </div>
                    {%- endif -%}

                    <div class="cart-recap__notices rte">
                      <p>
                        {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                          {{ 'cart.general.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                        {%- elsif cart.taxes_included -%}
                          {{ 'cart.general.taxes_included_but_shipping_at_checkout' | t }}
                        {%- elsif shop.shipping_policy.body != blank -%}
                          {{ 'cart.general.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                        {%- else -%}
                          {{ 'cart.general.taxes_and_shipping_at_checkout' | t }}
                        {%- endif -%}
                      </p>
                    </div>

                    <input type="hidden" name="attributes[collection_products_per_page]" value="">
                    <input type="hidden" name="attributes[collection_layout]" value="">
                    <button type="submit" name="checkout" class="cart-recap__checkout button button--primary button--full button--large">{{ 'cart.general.checkout' | t }}</button>
                  </div>
                </div>

                {%- if section.settings.show_payment_icons -%}
                  <div class="cart-recap__secure-payment">
                    <p class="cart-recap__secure-payment-title">{% render 'icon', icon: 'lock-2' %} {{ 'cart.general.secure_payments' | t }}</p>

                    <div class="cart-recap__secure-payment-list payment-list payment-list--centered">
                      {% for type in shop.enabled_payment_types %}
                        {{ type | payment_type_svg_tag: class: 'payment-list__item' }}
                      {% endfor %}
                    </div>
                  </div>
                {%- endif -%}
              </div>
            </form>
          </div>


          {%- comment -%}
          --------------------------------------------------------------------------------------
          YOU MAY ALSO LIKE RECOMMENDATIONS (moved above recently viewed/upsell)
          --------------------------------------------------------------------------------------
          {%- endcomment -%}
          {%- if section.settings.show_recommendations and cart.items.size > 0 -%}
            <style>
              #cart-recommendations-inline {
                margin-bottom: 20px;
                display: none;
              }
              .recommendations-carousel-wrapper {
                position: relative;
              }
              #recommendations-products {
                display: flex;
                gap: 0;
                overflow-x: auto;
                scroll-behavior: smooth;
                -webkit-overflow-scrolling: touch;
                scrollbar-width: none;
                -ms-overflow-style: none;
              }
              #recommendations-products::-webkit-scrollbar {
                display: none;
              }
              .recommendation-product-card {
                width: 160px;
                flex-shrink: 0;
                border-right: 1px solid #e5e5e5;
              }
              .recommendation-product-card:last-child {
                border-right: none;
              }
              .recommendation-product-title {
                font-size: 13px;
                font-weight: 600;
                color: #333;
                margin-bottom: 8px;
                line-height: 1.3;
                min-height: 35px;
                flex-grow: 1;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: text-decoration 0.2s;
              }
              .recommendation-product-card a:hover .recommendation-product-title {
                text-decoration: underline;
              }
              .carousel-arrow {
                position: absolute;
                top: 50%;
                transform: translateY(-50%);
                background: white;
                border: 1px solid #e5e5e5;
                border-radius: 50%;
                width: 40px;
                height: 40px;
                display: flex;
                align-items: center;
                justify-content: center;
                cursor: pointer;
                z-index: 2;
                box-shadow: 0 2px 8px rgba(0,0,0,0.1);
                transition: all 0.2s;
              }
              .carousel-arrow:hover {
                background: #f5f5f5;
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
              }
              .carousel-arrow:disabled {
                opacity: 0.3;
                cursor: not-allowed;
              }
              .carousel-arrow-left {
                left: -20px;
              }
              .carousel-arrow-right {
                right: -20px;
              }
              @media screen and (max-width: 767px) {
                #cart-recommendations-inline {
                  margin-top: 30px;
                }
                #recommendations-products {
                  gap: 0;
                  scroll-snap-type: x mandatory;
                }
                .recommendation-product-card {
                  width: 140px;
                  scroll-snap-align: start;
                }
                .carousel-arrow {
                  display: none;
                }
              }
            </style>
            <div class="container container--flush">
              <div id="cart-recommendations-inline">
                <div style="padding: 16px 0;">
                  <h3 style="margin: 0 0 16px; font-size: 18px; font-weight: 600; text-align: left;">{{ section.settings.recommendations_heading | default: "Top Up Your Cart" | escape }}</h3>
                  <div class="recommendations-carousel-wrapper">
                    <button class="carousel-arrow carousel-arrow-left" id="carousel-prev" aria-label="Previous products">
                      <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M12.5 15L7.5 10L12.5 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                    </button>
                    <div id="recommendations-products">
                      {%- comment -%}Products will load here via JavaScript{%- endcomment -%}
                    </div>
                    <button class="carousel-arrow carousel-arrow-right" id="carousel-next" aria-label="Next products">
                      <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M7.5 15L12.5 10L7.5 5" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            </div>

            {%- assign first_product = cart.items.first.product -%}

            <script>
              (function() {
                const container = document.getElementById('recommendations-products');
                const wrapper = document.getElementById('cart-recommendations-inline');
                const prevBtn = document.getElementById('carousel-prev');
                const nextBtn = document.getElementById('carousel-next');
                if (!container || !wrapper) return;

                const productId = {{ first_product.id }};
                const limit = 12;
                const url = '/recommendations/products.json?product_id=' + productId + '&limit=' + limit;

                console.log('Fetching recommendations from:', url);

                fetch(url)
                  .then(response => {
                    console.log('Response status:', response.status);
                    if (!response.ok) {
                      throw new Error('HTTP ' + response.status);
                    }
                    return response.json();
                  })
                  .then(data => {
                    console.log('Recommendations response:', data);

                    if (!data.products || data.products.length === 0) {
                      console.log('No products returned from API');
                      return;
                    }

                    // Filter out products already in cart
                    const cartProductIds = [{{ cart.items | map: 'product_id' | join: ',' }}];
                    console.log('Cart product IDs:', cartProductIds);

                    const filteredProducts = data.products.filter(p => !cartProductIds.includes(p.id));
                    console.log('Filtered products:', filteredProducts.length);

                    if (filteredProducts.length === 0) {
                      console.log('All recommended products are already in cart');
                      return;
                    }

                    // Show the section
                    wrapper.style.display = 'block';

                    container.innerHTML = filteredProducts.map(product => {
                      const price = (product.price / 100).toFixed(2);
                      const comparePrice = product.compare_at_price ? (product.compare_at_price / 100).toFixed(2) : null;
                      const onSale = comparePrice && parseFloat(comparePrice) > parseFloat(price);
                      const hasMultipleVariants = product.variants.length > 1;

                      return `
                        <div class="recommendation-product-card" style="text-align: center; padding: 10px; background: white; display: flex; flex-direction: column;">
                          <a href="${product.url}" style="display: block; text-decoration: none; flex-grow: 1; display: flex; flex-direction: column;">
                            <div style="width: 100%; aspect-ratio: 1/1; overflow: hidden; border-radius: 4px; margin-bottom: 8px; background: #ffffff; position: relative;">
                              <img src="${product.featured_image}" alt="${product.title}" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: contain;">
                            </div>
                            <div class="recommendation-product-title">${product.title}</div>
                          </a>
                          <div style="margin-bottom: 10px;">
                            ${onSale ? `
                              <span style="font-size: 14px; font-weight: 600; color: #e63946;">$${price}</span>
                              <span style="font-size: 12px; color: #999; text-decoration: line-through; margin-left: 4px;">$${comparePrice}</span>
                            ` : `
                              <span style="font-size: 14px; font-weight: 600; color: #333;">$${price}</span>
                            `}
                          </div>
                          ${hasMultipleVariants ? `
                            <button type="button" data-action="open-modal" data-secondary-action="open-quick-view" aria-controls="modal-quick-view-{{ section.id }}" data-product-url="${product.url}" style="width: 100%; padding: 10px 12px; background: #4492C6; color: white; border: none; border-radius: 4px; font-size: 13px; font-weight: 600; cursor: pointer; transition: background 0.2s; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;" onmouseover="this.style.background='#3a7eb0'" onmouseout="this.style.background='#4492C6'">
                              Select Options
                            </button>
                          ` : `
                            <form action="/cart/add" method="post" style="width: 100%;">
                              <input type="hidden" name="id" value="${product.variants[0].id}">
                              <button type="submit" style="width: 100%; padding: 10px 12px; background: #4492C6; color: white; border: none; border-radius: 4px; font-size: 13px; font-weight: 600; cursor: pointer; transition: background 0.2s; white-space: nowrap;" onmouseover="this.style.background='#3a7eb0'" onmouseout="this.style.background='#4492C6'">
                                Add to Cart
                              </button>
                            </form>
                          `}
                        </div>
                      `;
                    }).join('');

                    // Setup carousel navigation
                    function updateArrows() {
                      const scrollLeft = container.scrollLeft;
                      const maxScroll = container.scrollWidth - container.clientWidth;

                      if (prevBtn) prevBtn.disabled = scrollLeft <= 0;
                      if (nextBtn) nextBtn.disabled = scrollLeft >= maxScroll - 1;
                    }

                    if (prevBtn) {
                      prevBtn.addEventListener('click', function() {
                        const scrollAmount = container.clientWidth * 0.8;
                        container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
                      });
                    }

                    if (nextBtn) {
                      nextBtn.addEventListener('click', function() {
                        const scrollAmount = container.clientWidth * 0.8;
                        container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
                      });
                    }

                    container.addEventListener('scroll', updateArrows);
                    updateArrows();
                  })
                  .catch(e => {
                    console.error('Failed to load product recommendations:', e);
                  });
              })();
            </script>
          {%- endif -%}

          {%- comment -%}
          --------------------------------------------------------------------------------------
          UPSELL
          --------------------------------------------------------------------------------------
          {%- endcomment -%}

          {%- assign upsell_collection = section.settings.upsell_collection -%}

          {%- if section.blocks.size > 0 or upsell_collection != blank -%}
            <div class="container">
              {%- if section.blocks.size > 0 -%}
                <div class="section">
                  <header class="section__header">
                    <h2 class="section__title heading h3">{{ section.settings.trust_heading | escape }}</h2>
                  </header>

                  <div class="text-with-icons text-with-icons--boxed">
                    {%- for block in section.blocks -%}
                      <div class="text-with-icons__item" {{ block.shopify_attributes }}>
                        <div class="text-with-icons__icon-wrapper">
                          {%- if block.settings.custom_icon != blank -%}
                            <img loading="lazy" src="{{ block.settings.custom_icon | img_url: '60x' }}" alt="{{ block.settings.custom_icon.alt | escape }}">
                          {%- else -%}
                            {%- render 'icon', icon: block.settings.icon, stroke_width: 1.5 -%}
                          {%- endif -%}
                        </div>

                        {%- if block.settings.title != blank or block.settings.content != blank -%}
                          <div class="text-with-icons__content-wrapper">
                            {%- if block.settings.title != blank -%}
                              <p class="text-with-icons__title text--strong">{{ block.settings.title | escape }}</p>
                            {%- endif -%}

                            {%- if block.settings.content != blank -%}
                              <div class="text-with-icons__content rte">
                                {{ block.settings.content  }}
                              </div>
                            {%- endif -%}
                          </div>
                        {%- endif -%}
                      </div>
                    {%- endfor -%}
                  </div>
                </div>
              {%- endif -%}

              {%- if upsell_collection != empty -%}
                {%- comment -%}We iterate through all the products, by making sure to remove those that are already in the cart{%- endcomment -%}

                {%- capture upsell_products -%}
                  {%- assign upsell_products_count = 0 -%}

                  {%- for product in upsell_collection.products -%}
                    {%- unless product.available -%}
                      {%- continue -%}
                    {%- endunless -%}

                    {%- assign include_product = true -%}

                    {%- for line_item in cart.items -%}
                      {%- if line_item.product_id == product.id -%}
                        {%- assign include_product = false -%}
                        {%- break -%}
                      {%- endif -%}
                    {%- endfor -%}

                    {%- if include_product -%}
                      {%- render 'product-item', product: product, show_add_to_cart: true, grid_classes: '1/3--lap 1/3--desk 1/4--wide' -%}

                      {%- comment -%}Check how much products we have shown and limit{%- endcomment -%}
                      {%- assign upsell_products_count = upsell_products_count | plus: 1 -%}

                      {%- if upsell_products_count >= section.settings.upsell_products_count -%}
                        {%- break -%}
                      {%- endif -%}
                    {%- endif -%}
                  {%- endfor -%}
                {%- endcapture -%}

                {%- if upsell_products != blank -%}
                  {%- capture section_settings -%}
                  {
                    "stackable": false,
                    "layout": "vertical"
                  }
                  {%- endcapture -%}

                  <div class="section" data-section-id="{{ section.id }}-upsell" data-section-type="featured-collection" data-section-settings="{{ section_settings | escape_once }}">
                    <header class="section__header">
                      <h2 class="section__title heading h3">{{ section.settings.upsell_heading | escape }}</h2>
                    </header>

                    <div class="scroller">
                      <div class="scroller__inner">
                        <div class="product-list product-list--vertical product-list--scrollable">
                          {{ upsell_products }}
                        </div>
                      </div>
                    </div>
                  </div>

                {%- endif -%}
              {%- endif -%}
            </div>
          {% endif %}

          {%- comment -%}
          --------------------------------------------------------------------------------------
          QUICK VIEW CONTAINER (for both recommendations and upsells)
          --------------------------------------------------------------------------------------
          {%- endcomment -%}
          {%- if section.settings.show_recommendations or upsell_collection != blank -%}
            <div id="modal-quick-view-{{ section.id }}" class="modal" aria-hidden="true">
              <div class="modal__dialog modal__dialog--stretch" role="dialog">
                <button class="modal__close link" data-action="close-modal" title="{{ 'general.accessibility.close' | t | escape }}">
                  {%- render 'icon', icon: 'close' -%}
                </button>

                <div class="modal__loader">
                  {%- render 'icon', icon: 'search-loader' -%}
                </div>

                <div class="modal__inner"></div>
              </div>
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>

    <!-- Price Match Modal -->
  <div id="price-match-modal" class="cart-modal" onclick="if(event.target.id === 'price-match-modal') closePriceMatchModal();">
    <div class="cart-modal__content">
      <button class="cart-modal__close" onclick="closePriceMatchModal()" aria-label="Close">&times;</button>
      <h2 class="cart-modal__title">Lowest Price Guarantee</h2>
      <div class="cart-modal__body">
        <p>We at Trident Fly Fishing want you to have the best possible shopping experience. We know that this starts with getting the lowest price. To do this, we've created the industry's best low-price guarantee.</p>

        <p>If you find an identical product (size/color/line weight, etc.) in stock, at a lower price, we'll match it. This includes coupons, rod and reel combos, shipping, tax, etc. So, for example, if your local shop is running a deal for 10% off a $100 rod (ie $90 after coupon). This now $90 rod is subject to a 5% sales tax bringing the price to $94.50. We will charge you $94.50 (with free shipping of course).</p>

        <p>Please note that our price match policy only applies to published prices, so we can't match one-time offers given over the phone or in person.</p>

        <h3>Here's how it works:</h3>
        <ol>
          <li>Place your order online.</li>
          <li>Send an e-mail to <a href="mailto:support@tridentflyfishing.com">support@tridentflyfishing.com</a> within 24 hours of your order. Please include your order number, the name of the product you found at a lower price, and a link so that we can verify it. We're pretty easy going on what qualifies as evidence.</li>
        </ol>

        <p><strong>OR</strong></p>

        <p>Call us at <a href="tel:+18884135211">(888) 413-5211</a>, but please have the same information ready.</p>

        <h3>Exclusions</h3>
        <p>Our Low Price Guarantee excludes used, refurbished, and products sold from unauthorized dealers.</p>
      </div>
    </div>
  </div>

  <!-- Returns Policy Modal -->
  <div id="returns-modal" class="cart-modal" onclick="if(event.target.id === 'returns-modal') closeReturnsModal();">
    <div class="cart-modal__content">
      <button class="cart-modal__close" onclick="closeReturnsModal()" aria-label="Close">&times;</button>
      <h2 class="cart-modal__title">The Trident Guarantee</h2>
      <div class="cart-modal__body">
        <p>If you aren't completely satisfied with your purchase, you may return it for a full refund within 30 days as long as it's in sellable condition (unused, clean, undamaged, all packaging intact, warranty card not filled out... basically, just how you received it). We recommend testing your gear indoors and casting with clean hands, and trying on boots on carpeted floors. Unless otherwise specified, you will be responsible for return shipping. Proof of purchase is required for all returns, so please include a copy of your original invoice. If you return a product in unsellable condition we will ship the product back to you and you will not receive a refund.</p>

        <p>If you receive a product that is damaged, broken, or if we've made a mistake (hey, sometimes they happen), we will send you a pre-paid return label for your return and promptly get you a replacement product. Due to the handmade nature of many of our products, there are some things that are out of our control such as: quality of thread wraps, epoxy, anodizing, and other minor variations that do not impact the fishability of the product. These situations will still be covered by our 30 day return policy, but are not considered 'damage' and do not qualify for pre-paid returns. As always, we will work with you and/or the manufacturer to ensure that you're getting a product that you are 100% satisfied with.</p>

        <h3>Final Sale</h3>
        <p>All of the following are considered final sale items and <strong>CANNOT</strong> be returned or refunded:</p>
        <ul>
          <li>Any items which are engraved, personalized, or listed as "special order" (like bamboo rods, 1-piece or 2-piece rods)</li>
          <li>Gift Cards</li>
          <li>Items that have been rigged or mounted onto a fly reel, this includes fly lines, backing, etc.</li>
          <li>Fly lines that have been used, tried, or modified in any way</li>
          <li>Custom rigging fees</li>
          <li>Shipping fees</li>
          <li>Items on sale for more than 25% off</li>
          <li>Items listed in our catalog as final sale</li>
          <li>Purchases made on eBay</li>
          <li>Flies that are not individually packaged</li>
          <li>Whiting feathers</li>
        </ul>

        <h3>Further Exceptions</h3>
        <ul>
          <li>Used items are covered by our Used Tackle Return Policy</li>
          <li>Reels that have been spooled with backing, and fly lines mounted on those reels, are subject to a 20% restocking fee. This means that if the price of the reel is $100, you will only receive $80 back.</li>
        </ul>

        <h3>Gifts</h3>
        <p>If you return an order that comes with a free gift (like a free fly line or backing), you must also return the gift. If we don't receive it, we will refund you for the items returned less the full retail value of the gift.</p>

        <h3>To Return Products</h3>
        <p>You can either bring your products and your invoice to our shop or you can mail the products back to us and we'll credit your card right away. You can mail the items back to us using the carrier of your choice to:</p>

        <p style="padding-left: 20px; font-weight: 500;">
          Trident Fly Fishing Returns<br>
          190 Riverside St<br>
          Suite 9A<br>
          Portland, ME 04103
        </p>

        <p>No CODs allowed. Also, please be sure to get tracking information for your package since you are responsible until we receive the items.</p>

        <p>If you'd like to make an exchange, simply place a new order online.</p>
      </div>
    </div>
  </div>

  <script>
    function openPriceMatchModal(event) {
      // Prevent any default behavior
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }

      var modal = document.getElementById('price-match-modal');
      if (modal) {
        modal.classList.add('active');
        document.body.classList.add('modal-open');
      }

      return false;
    }

    function closePriceMatchModal(event) {
      // Prevent any default behavior
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }

      var modal = document.getElementById('price-match-modal');
      if (modal) {
        modal.classList.remove('active');
        document.body.classList.remove('modal-open');
      }

      return false;
    }

    function openReturnsModal(event) {
      // Prevent any default behavior
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }

      var modal = document.getElementById('returns-modal');
      if (modal) {
        modal.classList.add('active');
        document.body.classList.add('modal-open');
      }

      return false;
    }

    function closeReturnsModal(event) {
      // Prevent any default behavior
      if (event) {
        event.preventDefault();
        event.stopPropagation();
      }

      var modal = document.getElementById('returns-modal');
      if (modal) {
        modal.classList.remove('active');
        document.body.classList.remove('modal-open');
      }

      return false;
    }

    // Close modals on ESC key
    if (!window.cartModalsListenerAdded) {
      document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape' || event.key === 'Esc') {
          closePriceMatchModal();
          closeReturnsModal();
        }
      });
      window.cartModalsListenerAdded = true;
    }
  </script>
  {%- endif -%}
</section>

{% schema %}
{
  "name": "Cart",
  "max_blocks": 3,
  "settings": [
    {
      "type": "paragraph",
      "content": "Those settings are only applicable when the cart contains at least one product."
    },
    {
      "type": "checkbox",
      "id": "enable_order_notes",
      "label": "Enable order notes",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_payment_icons",
      "label": "Show payment icons",
      "default": true
    },
    {
      "type": "header",
      "content": "Gift wrap"
    },
    {
      "type": "paragraph",
      "content": "Gift wrap needs to be set up as a product."
    },
    {
      "type": "product",
      "id": "gift_wrap_product",
      "label": "Product"
    },
    {
      "type": "text",
      "id": "gift_wrap_text",
      "label": "Text",
      "default": "Do you want a gift wrap?",
      "visible_if": "{{ section.settings.gift_wrap_product != blank }}"
    },
    {
      "type": "text",
      "id": "gift_wrap_button",
      "label": "Button",
      "default": "Add a gift wrap",
      "visible_if": "{{ section.settings.gift_wrap_product != blank }}"
    },
    {
      "type": "header",
      "content": "Shipping estimator"
    },
    {
      "type": "checkbox",
      "id": "show_shipping_estimator",
      "label": "Show shipping rates calculator",
      "default": true
    },
    {
      "type": "text",
      "id": "shipping_estimator_default_country",
      "label": "Default country",
      "info": "If the customer is logged in, the country of their shipping address will be used.",
      "default": "United States",
      "visible_if": "{{ section.settings.show_shipping_estimator }}"
    },
    {
      "type": "text",
      "id": "trust_heading",
      "label": "Heading",
      "default": "Our guarantees"
    },
    {
      "type": "header",
      "content": "Product Recommendations"
    },
    {
      "type": "checkbox",
      "id": "show_recommendations",
      "label": "Show frequently bought together",
      "info": "Uses Shopify's AI to suggest products based on purchase history",
      "default": true
    },
    {
      "type": "text",
      "id": "recommendations_heading",
      "label": "Recommendations heading",
      "default": "Recommended For You",
      "visible_if": "{{ section.settings.show_recommendations }}"
    },
    {
      "type": "header",
      "content": "Upsell"
    },
    {
      "type": "paragraph",
      "content": "Show additional products to encourage customers to buy more."
    },
    {
      "type": "text",
      "id": "upsell_heading",
      "label": "Heading",
      "default": "Complete your cart"
    },
    {
      "type": "collection",
      "id": "upsell_collection",
      "label": "Collection",
      "info": "Products already in cart or sold out will be hidden."
    },
    {
      "type": "range",
      "id": "upsell_products_count",
      "label": "Products to show",
      "min": 4,
      "max": 12,
      "step": 4,
      "default": 4,
      "visible_if": "{{ section.settings.upsell_collection != blank }}"
    }
  ],
  "blocks": [
    {
      "name": "Trust text",
      "type": "trust",
      "settings": [
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "options": [
            {
              "value": "bi-add-to-cart",
              "label": "Add to cart",
              "group": "Shop"
            },
            {
              "value": "bi-gift-wrap",
              "label": "Gift wrap",
              "group": "Shop"
            },
            {
              "value": "bi-gift-box",
              "label": "Gift box",
              "group": "Shop"
            },
            {
              "value": "bi-heart",
              "label": "Heart",
              "group": "Shop"
            },
            {
              "value": "bi-ecology",
              "label": "Ecology",
              "group": "Shop"
            },
            {
              "value": "bi-plant",
              "label": "Plant",
              "group": "Shop"
            },
            {
              "value": "bi-shop",
              "label": "Shop",
              "group": "Shop"
            },
            {
              "value": "bi-shop-pin",
              "label": "Shop with pin",
              "group": "Shop"
            },
            {
              "value": "bi-alert",
              "label": "Alert",
              "group": "Communication"
            },
            {
              "value": "bi-chat",
              "label": "Chat",
              "group": "Communication"
            },
            {
              "value": "bi-comment",
              "label": "Comment",
              "group": "Communication"
            },
            {
              "value": "bi-customer-support",
              "label": "Customer support",
              "group": "Communication"
            },
            {
              "value": "bi-email",
              "label": "Email",
              "group": "Communication"
            },
            {
              "value": "bi-network",
              "label": "Network",
              "group": "Communication"
            },
            {
              "value": "bi-newsletter",
              "label": "Newsletter",
              "group": "Communication"
            },
            {
              "value": "bi-love",
              "label": "Love",
              "group": "Communication"
            },
            {
              "value": "bi-phone",
              "label": "Phone",
              "group": "Communication"
            },
            {
              "value": "bi-share",
              "label": "Share",
              "group": "Communication"
            },
            {
              "value": "bi-delivery",
              "label": "Delivery",
              "group": "Delivery"
            },
            {
              "value": "bi-fast-delivery",
              "label": "Fast delivery",
              "group": "Delivery"
            },
            {
              "value": "bi-returns",
              "label": "Returns",
              "group": "Delivery"
            },
            {
              "value": "bi-time",
              "label": "Time",
              "group": "Delivery"
            },
            {
              "value": "bi-secure-payment",
              "label": "Secure payment",
              "group": "Security"
            },
            {
              "value": "bi-mobile-payment",
              "label": "Mobile payment",
              "group": "Security"
            },
            {
              "value": "bi-credit-card",
              "label": "Credit card",
              "group": "Security"
            },
            {
              "value": "bi-shield",
              "label": "Shield",
              "group": "Security"
            }
          ],
          "default": "bi-customer-support"
        },
        {
          "type": "image_picker",
          "id": "custom_icon",
          "label": "Custom icon",
          "info": "60 x 60px .png with transparency recommended"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Your title"
        },
        {
          "type": "richtext",
          "id": "content",
          "label": "Content",
          "default": "<p>Short content about your store</p>"
        }
      ]
    }
  ]
}
{% endschema %}