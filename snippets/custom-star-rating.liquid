{% comment %}
  Custom Star Rating Display
  Extracts review data from Yotpo widget on page load
  Displays stars and count when reviews are available
  Click to scroll to full reviews section
{% endcomment %}
<style>
  /* Hide Yotpo star rating widget ONLY in product info area (not the main review section at bottom) */
  .product-meta .yotpo-widget-instance,
  .product-meta .yotpo-bottomline,
  .product-meta [class*="yotpo-bottom-line"] {
    display: none !important;
  }

  /* Hide the Yotpo app block in product-info section only */
  .product-form .product-info__block-item--app:has(.yotpo-reviews-star-ratings-widget),
  .card .product-info__block-item--app:has(.yotpo-reviews-star-ratings-widget),
  product-form .product-info__block-item[data-block-type="app"]:has(.yotpo-reviews-star-ratings-widget) {
    display: none !important;
  }

  /* Target specific Yotpo star rating widget by ID (not the main reviews) */
  #shopify-block-AeUtvMlZNMUNJV1B6a__98e0b222-0db6-4ffd-b5dc-ac118cb6455e {
    display: none !important;
  }

  .custom-star-rating {
    display: flex; /* Show immediately with placeholder */
    align-items: center;
    gap: 8px;
    cursor: pointer;
    margin: 8px 0;
    min-height: 20px; /* Prevent layout shift */
  }

  .custom-star-rating:hover .custom-star-rating__text {
    text-decoration: underline;
  }

  .custom-star-rating__stars {
    display: flex;
    gap: 2px;
  }

  .custom-star-rating__star {
    width: 16px;
    height: 16px;
    fill: #e0e0e0;
  }

  .custom-star-rating__star.filled {
    fill: #ffa500;
  }

  .custom-star-rating__star.half {
    fill: url(#half-star-gradient);
  }

  .custom-star-rating__text {
    font-size: 14px;
    color: #666;
  }

  /* Skeleton placeholder animation */
  .custom-star-rating__placeholder {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .custom-star-rating__skeleton-stars {
    display: flex;
    gap: 2px;
  }

  .custom-star-rating__skeleton-star {
    width: 16px;
    height: 16px;
  }

  .custom-star-rating__skeleton-star path {
    fill: #e0e0e0;
    animation: star-fill 2s ease-in-out infinite;
  }

  /* Sequential animation delays for left-to-right effect */
  .custom-star-rating__skeleton-star:nth-child(1) path {
    animation-delay: 0s;
  }

  .custom-star-rating__skeleton-star:nth-child(2) path {
    animation-delay: 0.15s;
  }

  .custom-star-rating__skeleton-star:nth-child(3) path {
    animation-delay: 0.3s;
  }

  .custom-star-rating__skeleton-star:nth-child(4) path {
    animation-delay: 0.45s;
  }

  .custom-star-rating__skeleton-star:nth-child(5) path {
    animation-delay: 0.6s;
  }

  .custom-star-rating__skeleton-text {
    width: 100px;
    height: 14px;
    background: #e0e0e0;
    border-radius: 3px;
    opacity: 0.5;
  }

  @keyframes star-fill {
    0%, 100% {
      fill: #e0e0e0;
    }
    40%, 60% {
      fill: #ffa500;
    }
  }

  /* Hide placeholder when loaded */
  .custom-star-rating.loaded .custom-star-rating__placeholder {
    display: none;
  }
</style>

<svg style="display: none;">
  <defs>
    <linearGradient id="half-star-gradient">
      <stop offset="50%" stop-color="#ffa500"/>
      <stop offset="50%" stop-color="#e0e0e0"/>
    </linearGradient>
  </defs>
</svg>

<div class="custom-star-rating" onclick="document.querySelector('.yotpo-main-widget, .yotpo-reviews-carousel, [id*=yotpo]')?.scrollIntoView({ behavior: 'smooth', block: 'start' })">
  <div class="custom-star-rating__placeholder">
    <div class="custom-star-rating__skeleton-stars">
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
    </div>
    <div class="custom-star-rating__skeleton-text"></div>
  </div>
  <div class="custom-star-rating__stars"></div>
  <span class="custom-star-rating__text"></span>
</div>

<script>
(function() {
  function extractYotpoData() {
    // Try multiple selectors to find the review text
    let yotpoText = null;
    const selectors = [
      '.yotpo-bottom-line-basic-text',
      '.yotpo-bottomline .text-m',
      '.yotpo-bottomline-box-1 .text-m',
      '[class*="yotpo"][class*="bottom"]',
      '.yotpo .text-m'
    ];

    for (let selector of selectors) {
      yotpoText = document.querySelector(selector);
      if (yotpoText && yotpoText.textContent.toLowerCase().includes('review')) {
        break;
      } else {
        yotpoText = null;
      }
    }

    // If still not found, search all Yotpo elements for review text
    if (!yotpoText) {
      const allYotpo = document.querySelectorAll('[class*="yotpo"]');

      for (let element of allYotpo) {
        const text = (element.textContent || '').trim();

        // Look for review text
        if (text.toLowerCase().includes('review')) {
          yotpoText = element;
          break;
        }
      }
    }

    if (!yotpoText) return null;

    const text = yotpoText.textContent || yotpoText.innerText;
    const countMatch = text.match(/(\d+)\s+review/i);

    if (!countMatch) return null;

    const reviewCount = parseInt(countMatch[1], 10);

    // Extract rating from aria-label or data attributes
    let rating = 0;

    // Try to find rating in aria-label
    const ariaElements = document.querySelectorAll('[aria-label*="star"]');
    for (let el of ariaElements) {
      const ariaLabel = el.getAttribute('aria-label') || '';
      const ratingMatch = ariaLabel.match(/([\d.]+)\s+star/i);
      if (ratingMatch) {
        rating = parseFloat(ratingMatch[1]);
        break;
      }
    }

    // Try to find rating in the bottom-line score text
    if (!rating) {
      const scoreSelectors = [
        '.yotpo-bottom-line-score',
        '.yotpo-sr-bottom-line-score',
        '[class*="bottom-line"][class*="score"]'
      ];

      for (let selector of scoreSelectors) {
        const scoreElement = document.querySelector(selector);
        if (scoreElement) {
          const scoreText = (scoreElement.textContent || '').trim();
          const scoreMatch = scoreText.match(/^([\d.]+)$/);
          if (scoreMatch) {
            rating = parseFloat(scoreMatch[1]);
            break;
          }
        }
      }
    }

    // Fallback: count filled stars
    if (!rating) {
      const allStarSelectors = [
        '.yotpo-icon-star:not(.yotpo-icon-empty-star)',
        '[class*="star"][class*="filled"]',
        '.yotpo-star.filled'
      ];

      for (let selector of allStarSelectors) {
        const filledStars = document.querySelectorAll(selector);
        if (filledStars.length > 0 && filledStars.length <= 5) {
          rating = filledStars.length;
          break;
        }
      }
    }

    // Final fallback: default to 5.0 if we have reviews but no rating
    if (!rating && reviewCount > 0) {
      rating = 5.0;
    }

    return { rating, reviewCount };
  }

  function renderStars(rating) {
    const starsHtml = [];
    for (let i = 1; i <= 5; i++) {
      const starClass = rating >= i ? 'filled' : (rating >= i - 0.5 ? 'half' : '');
      starsHtml.push(`
        <svg class="custom-star-rating__star ${starClass}" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
        </svg>
      `);
    }
    return starsHtml.join('');
  }

  let hasLoaded = false;
  let attemptsMade = 0;
  const maxAttempts = 8; // Total attempts before giving up

  function updateCustomRating() {
    if (hasLoaded) return;

    attemptsMade++;

    const data = extractYotpoData();

    // If no data and we've tried enough times, hide the placeholder
    if ((!data || data.reviewCount === 0) && attemptsMade >= maxAttempts) {
      const customRating = document.querySelector('.custom-star-rating');
      if (customRating) {
        customRating.style.display = 'none';
      }
      hasLoaded = true;
      return;
    }

    if (!data || data.reviewCount === 0) return;

    const customRating = document.querySelector('.custom-star-rating');
    if (!customRating) return;

    const starsContainer = customRating.querySelector('.custom-star-rating__stars');
    const textContainer = customRating.querySelector('.custom-star-rating__text');

    if (starsContainer && textContainer) {
      starsContainer.innerHTML = renderStars(data.rating);
      textContainer.textContent = `${data.rating.toFixed(1)} (${data.reviewCount} ${data.reviewCount === 1 ? 'review' : 'reviews'})`;
      customRating.classList.add('loaded');
      hasLoaded = true;

      // Hide the original Yotpo star rating widget ONLY in product info (not main reviews)
      const productForm = document.querySelector('product-form, .product-form');
      if (productForm) {
        const elementsToHide = productForm.querySelectorAll('.yotpo-reviews-star-ratings-widget, .yotpo-widget-instance');
        elementsToHide.forEach(el => {
          el.style.display = 'none';
        });
      }
    }
  }

  // Try immediately
  updateCustomRating();

  // Try after DOM loaded
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', updateCustomRating);
  }

  // Watch for Yotpo widget to appear in DOM
  const observer = new MutationObserver(function(mutations) {
    if (hasLoaded) {
      observer.disconnect();
      return;
    }

    for (let mutation of mutations) {
      if (mutation.addedNodes.length > 0) {
        const yotpoAdded = Array.from(mutation.addedNodes).some(node =>
          node.nodeType === 1 && (
            node.classList?.contains('yotpo-bottomline') ||
            node.querySelector?.('.yotpo-bottomline')
          )
        );

        if (yotpoAdded) {
          setTimeout(updateCustomRating, 100);
          break;
        }
      }
    }
  });

  // Start observing
  observer.observe(document.body, {
    childList: true,
    subtree: true
  });

  // Fallback timeouts
  setTimeout(updateCustomRating, 500);
  setTimeout(updateCustomRating, 1500);
  setTimeout(updateCustomRating, 3000);
  setTimeout(updateCustomRating, 5000);

  // Listen for Yotpo events
  document.addEventListener('yotpo.bottomline.loaded', updateCustomRating);
  window.addEventListener('yotpo.initialized', updateCustomRating);

  // Cleanup observer after 10 seconds
  setTimeout(() => observer.disconnect(), 10000);
})();
</script>
