{% comment %}
  Custom Star Rating Display
  Extracts review data from Yotpo widget on page load
  Displays stars and count when reviews are available
  Click to scroll to full reviews section
{% endcomment %}
<style>
  /* Hide Yotpo star rating widget ONLY in product info area (not the main review section at bottom) */
  .product-meta .yotpo-widget-instance,
  .product-meta .yotpo-bottomline,
  .product-meta [class*="yotpo-bottom-line"] {
    display: none !important;
  }

  /* Hide the entire app block container that has Yotpo star rating widget */
  .product-info__block-item[data-block-type="@app"]:has(.yotpo-reviews-star-ratings-widget),
  .product-info__block-item--\@app:has(.yotpo-reviews-star-ratings-widget),
  [class*="product-info__block-item"][data-block-id*="98e0b222-0db6-4ffd-b5dc-ac118cb6455e"] {
    display: none !important;
  }

  /* Target specific Yotpo star rating widget by ID (not the main reviews) */
  #shopify-block-AeUtvMlZNMUNJV1B6a__98e0b222-0db6-4ffd-b5dc-ac118cb6455e {
    display: none !important;
  }

  .custom-star-rating {
    display: flex; /* Show immediately with placeholder */
    align-items: center;
    gap: 8px;
    cursor: pointer;
    margin: 8px 0;
    min-height: 20px; /* Prevent layout shift */
  }

  .custom-star-rating:hover .custom-star-rating__text {
    text-decoration: underline;
  }

  .custom-star-rating__stars {
    display: flex;
    gap: 2px;
  }

  .custom-star-rating__star {
    width: 16px;
    height: 16px;
    fill: #e0e0e0;
  }

  .custom-star-rating__star.filled {
    fill: #ffa500;
  }

  .custom-star-rating__star.partial {
    /* Gradient fill defined inline for each star */
  }

  .custom-star-rating__star.half {
    fill: url(#half-star-gradient);
  }

  .custom-star-rating__text {
    font-size: 14px;
    color: #666;
  }

  /* Skeleton placeholder animation */
  .custom-star-rating__placeholder {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .custom-star-rating__skeleton-stars {
    display: flex;
    gap: 2px;
  }

  .custom-star-rating__skeleton-star {
    width: 16px;
    height: 16px;
  }

  .custom-star-rating__skeleton-star path {
    fill: #e0e0e0;
    animation: star-fill 2s ease-in-out infinite;
  }

  /* Sequential animation delays for left-to-right effect */
  .custom-star-rating__skeleton-star:nth-child(1) path {
    animation-delay: 0s;
  }

  .custom-star-rating__skeleton-star:nth-child(2) path {
    animation-delay: 0.15s;
  }

  .custom-star-rating__skeleton-star:nth-child(3) path {
    animation-delay: 0.3s;
  }

  .custom-star-rating__skeleton-star:nth-child(4) path {
    animation-delay: 0.45s;
  }

  .custom-star-rating__skeleton-star:nth-child(5) path {
    animation-delay: 0.6s;
  }

  .custom-star-rating__skeleton-text {
    width: 100px;
    height: 14px;
    background: #e0e0e0;
    border-radius: 3px;
    opacity: 0.5;
  }

  @keyframes star-fill {
    0%, 100% {
      fill: #e0e0e0;
    }
    40%, 60% {
      fill: #ffa500;
    }
  }

  /* Hide placeholder when loaded */
  .custom-star-rating.loaded .custom-star-rating__placeholder {
    display: none;
  }
</style>

<svg style="display: none;">
  <defs>
    <linearGradient id="half-star-gradient">
      <stop offset="50%" stop-color="#ffa500"/>
      <stop offset="50%" stop-color="#e0e0e0"/>
    </linearGradient>
  </defs>
</svg>

<div class="custom-star-rating" style="cursor: pointer;" data-keep-alive>
  <div class="custom-star-rating__placeholder">
    <div class="custom-star-rating__skeleton-stars">
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
    </div>
    <div class="custom-star-rating__skeleton-text"></div>
  </div>
  <div class="custom-star-rating__stars"></div>
  <span class="custom-star-rating__text"></span>
</div>

<script>
(function() {
  console.log('[CUSTOM RATING API] Script starting...');

  // Yotpo API configuration
  const YOTPO_APP_KEY = 'OoIPsp7sWXUEAUt03yK0HAtt';
  const productId = {{ product.id | json }};
  const productHandle = {{ product.handle | json }};
  const shopDomain = {{ shop.permanent_domain | json }};

  console.log('[CUSTOM RATING API] Product ID:', productId);
  console.log('[CUSTOM RATING API] Product Handle:', productHandle);

  // Store loaded state globally to persist across variant changes
  if (!window.customRatingState) {
    window.customRatingState = {
      loaded: false,
      html: null,
      data: null
    };
    console.log('[CUSTOM RATING API] Initialized customRatingState');
  } else {
    console.log('[CUSTOM RATING API] customRatingState already exists');
  }

  // If already loaded, instantly restore the saved HTML
  if (window.customRatingState.loaded && window.customRatingState.html) {
    console.log('[CUSTOM RATING API] Already loaded, instantly restoring saved state');

    requestAnimationFrame(function() {
      const container = document.querySelector('.custom-star-rating');
      if (container && !container.classList.contains('loaded')) {
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = window.customRatingState.html;
        const savedElement = tempDiv.firstElementChild;

        if (savedElement) {
          container.replaceWith(savedElement);
          attachClickHandler(savedElement);
        }
      }
    });
    return;
  }

  // Attach click handler to scroll to reviews
  function attachClickHandler(element) {
    element.addEventListener('click', function() {
      const reviewsSelectors = [
        '#yotpo-app',
        '.yotpo-main-widget',
        '#yotpo-reviews-widget',
        '[id*="yotpo-reviews"]',
        '[class*="yotpo"][class*="widget"]:not([class*="star-ratings"])',
        '.yotpo-reviews-carousel'
      ];

      let reviewsSection = null;
      for (let selector of reviewsSelectors) {
        const element = document.querySelector(selector);
        if (element && element.offsetHeight > 50) {
          reviewsSection = element;
          break;
        }
      }

      if (reviewsSection) {
        const offset = 80;
        const elementPosition = reviewsSection.getBoundingClientRect().top;
        const offsetPosition = elementPosition + window.scrollY - offset;

        window.scrollTo({
          top: offsetPosition,
          behavior: 'smooth'
        });
      }
    });
  }

  // Fetch rating data from Yotpo API
  async function fetchYotpoData() {
    console.log('[CUSTOM RATING API] ========== fetchYotpoData() CALLED ==========');
    console.log('[CUSTOM RATING API] Product ID:', productId);
    console.log('[CUSTOM RATING API] Product Handle:', productHandle);
    console.log('[CUSTOM RATING API] App Key:', YOTPO_APP_KEY);

    // Try multiple product identifier formats
    const productIdentifiers = [
      productId,           // Shopify product ID
      productHandle,       // Product handle
      `shopify_${productId}` // Sometimes Yotpo prefixes with platform
    ];

    for (const identifier of productIdentifiers) {
      try {
        // Yotpo API endpoint for product bottomline (star rating summary)
        const apiUrl = `https://api.yotpo.com/v1/widget/${YOTPO_APP_KEY}/products/${identifier}/bottomline`;
        console.log('[CUSTOM RATING API] Trying API URL:', apiUrl);

        console.log('[CUSTOM RATING API] Making fetch request for identifier:', identifier);
        const response = await fetch(apiUrl);
        console.log('[CUSTOM RATING API] Response received:', response.status, response.statusText);

        if (!response.ok) {
          console.log('[CUSTOM RATING API] API request failed with status:', response.status, '- trying next identifier...');
          continue; // Try next identifier
        }

        console.log('[CUSTOM RATING API] Parsing JSON...');
        const data = await response.json();
        console.log('[CUSTOM RATING API] Full API response:', JSON.stringify(data, null, 2));

        if (data && data.response && data.response.bottomline) {
          const bottomline = data.response.bottomline;
          console.log('[CUSTOM RATING API] Bottomline data:', bottomline);

          const rating = parseFloat(bottomline.average_score) || 0;
          const reviewCount = parseInt(bottomline.total_reviews) || 0;

          console.log('[CUSTOM RATING API] Parsed rating:', rating);
          console.log('[CUSTOM RATING API] Parsed reviewCount:', reviewCount);
          console.log('[CUSTOM RATING API] SUCCESS with identifier:', identifier);

          return reviewCount > 0 ? { rating, reviewCount } : null;
        }

        console.log('[CUSTOM RATING API] No bottomline data in response for identifier:', identifier);
      } catch (error) {
        console.error('[CUSTOM RATING API] Error with identifier:', identifier, error);
        // Try next identifier
      }
    }

    console.error('[CUSTOM RATING API] ========== ALL IDENTIFIERS FAILED ==========');
    console.error('[CUSTOM RATING API] Tried identifiers:', productIdentifiers);
    return null;
  }

  function renderStars(rating) {
    const starsHtml = [];
    for (let i = 1; i <= 5; i++) {
      const starValue = i;
      const fillPercentage = Math.min(100, Math.max(0, (rating - (starValue - 1)) * 100));

      let starMarkup = '';
      if (fillPercentage === 100) {
        // Fully filled star
        starMarkup = `
          <svg class="custom-star-rating__star filled" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
        `;
      } else if (fillPercentage === 0) {
        // Empty star
        starMarkup = `
          <svg class="custom-star-rating__star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
        `;
      } else {
        // Partially filled star - create unique gradient
        const gradientId = 'star-gradient-' + i + '-' + Math.round(fillPercentage);
        starMarkup = `
          <svg class="custom-star-rating__star partial" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <defs>
              <linearGradient id="${gradientId}">
                <stop offset="${fillPercentage}%" stop-color="#ffa500"/>
                <stop offset="${fillPercentage}%" stop-color="#e0e0e0"/>
              </linearGradient>
            </defs>
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" fill="url(#${gradientId})"/>
          </svg>
        `;
      }

      starsHtml.push(starMarkup);
    }
    return starsHtml.join('');
  }

  // Update the custom rating display with data
  async function updateCustomRating(data) {
    const customRating = document.querySelector('.custom-star-rating');
    if (!customRating) return;

    const starsContainer = customRating.querySelector('.custom-star-rating__stars');
    const textContainer = customRating.querySelector('.custom-star-rating__text');

    if (!starsContainer || !textContainer) return;

    if (!data || data.reviewCount === 0) {
      // No reviews
      starsContainer.innerHTML = renderStars(0);
      textContainer.textContent = 'No reviews yet';
      customRating.classList.add('loaded');
      customRating.style.cursor = 'default';
      customRating.style.opacity = '0.6';
    } else {
      // Has reviews
      starsContainer.innerHTML = renderStars(data.rating);
      textContainer.textContent = `${data.rating.toFixed(1)} (${data.reviewCount} ${data.reviewCount === 1 ? 'review' : 'reviews'})`;
      customRating.classList.add('loaded');
      customRating.style.cursor = 'pointer';
      customRating.style.opacity = '1';

      // Save the loaded state and HTML
      window.customRatingState.loaded = true;
      window.customRatingState.html = customRating.outerHTML;
      window.customRatingState.data = data;

      // Add click handler to scroll to reviews
      attachClickHandler(customRating);

      // Hide the original Yotpo star rating widget
      const productForm = document.querySelector('product-form, .product-form');
      if (productForm) {
        const yotpoWidgets = productForm.querySelectorAll('.yotpo-reviews-star-ratings-widget, .yotpo-widget-instance');
        yotpoWidgets.forEach(el => {
          el.style.display = 'none';
          const parentBlock = el.closest('.product-info__block-item[data-block-type="@app"]');
          if (parentBlock) {
            parentBlock.style.display = 'none';
          }
        });
      }
    }
  }

  // Initialize: Fetch data from API and display
  (async function init() {
    console.log('[CUSTOM RATING API] Initializing...');

    const data = await fetchYotpoData();

    if (data) {
      console.log('[CUSTOM RATING API] Successfully loaded rating data:', data);
      await updateCustomRating(data);
    } else {
      console.log('[CUSTOM RATING API] No rating data found, showing "No reviews yet"');
      await updateCustomRating(null);
    }
  })();
})();
</script>
