{% comment %}
  Custom Star Rating Display
  Extracts review data from Yotpo widget on page load
  Displays stars and count when reviews are available
  Click to scroll to full reviews section
{% endcomment %}
<style>
  /* Hide Yotpo star rating widget ONLY in product info area (not the main review section at bottom) */
  .product-meta .yotpo-widget-instance,
  .product-meta .yotpo-bottomline,
  .product-meta [class*="yotpo-bottom-line"] {
    display: none !important;
  }

  /* Hide the entire app block container that has Yotpo star rating widget */
  .product-info__block-item[data-block-type="@app"]:has(.yotpo-reviews-star-ratings-widget),
  .product-info__block-item--\@app:has(.yotpo-reviews-star-ratings-widget),
  [class*="product-info__block-item"][data-block-id*="98e0b222-0db6-4ffd-b5dc-ac118cb6455e"] {
    display: none !important;
  }

  /* Target specific Yotpo star rating widget by ID (not the main reviews) */
  #shopify-block-AeUtvMlZNMUNJV1B6a__98e0b222-0db6-4ffd-b5dc-ac118cb6455e {
    display: none !important;
  }

  .custom-star-rating {
    display: flex; /* Show immediately with placeholder */
    align-items: center;
    gap: 8px;
    cursor: pointer;
    margin: 8px 0;
    min-height: 20px; /* Prevent layout shift */
  }

  .custom-star-rating:hover .custom-star-rating__text {
    text-decoration: underline;
  }

  .custom-star-rating__stars {
    display: flex;
    gap: 2px;
  }

  .custom-star-rating__star {
    width: 16px;
    height: 16px;
    fill: #e0e0e0;
  }

  .custom-star-rating__star.filled {
    fill: #ffa500;
  }

  .custom-star-rating__star.partial {
    /* Gradient fill defined inline for each star */
  }

  .custom-star-rating__star.half {
    fill: url(#half-star-gradient);
  }

  .custom-star-rating__text {
    font-size: 14px;
    color: #666;
  }

  /* Skeleton placeholder animation */
  .custom-star-rating__placeholder {
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .custom-star-rating__skeleton-stars {
    display: flex;
    gap: 2px;
  }

  .custom-star-rating__skeleton-star {
    width: 16px;
    height: 16px;
  }

  .custom-star-rating__skeleton-star path {
    fill: #e0e0e0;
    animation: star-fill 2s ease-in-out infinite;
  }

  /* Sequential animation delays for left-to-right effect */
  .custom-star-rating__skeleton-star:nth-child(1) path {
    animation-delay: 0s;
  }

  .custom-star-rating__skeleton-star:nth-child(2) path {
    animation-delay: 0.15s;
  }

  .custom-star-rating__skeleton-star:nth-child(3) path {
    animation-delay: 0.3s;
  }

  .custom-star-rating__skeleton-star:nth-child(4) path {
    animation-delay: 0.45s;
  }

  .custom-star-rating__skeleton-star:nth-child(5) path {
    animation-delay: 0.6s;
  }

  .custom-star-rating__skeleton-text {
    width: 100px;
    height: 14px;
    background: #e0e0e0;
    border-radius: 3px;
    opacity: 0.5;
  }

  @keyframes star-fill {
    0%, 100% {
      fill: #e0e0e0;
    }
    40%, 60% {
      fill: #ffa500;
    }
  }

  /* Hide placeholder when loaded */
  .custom-star-rating.loaded .custom-star-rating__placeholder {
    display: none;
  }
</style>

<svg style="display: none;">
  <defs>
    <linearGradient id="half-star-gradient">
      <stop offset="50%" stop-color="#ffa500"/>
      <stop offset="50%" stop-color="#e0e0e0"/>
    </linearGradient>
  </defs>
</svg>

<div class="custom-star-rating" style="cursor: pointer;">
  <div class="custom-star-rating__placeholder">
    <div class="custom-star-rating__skeleton-stars">
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
      <svg class="custom-star-rating__skeleton-star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
      </svg>
    </div>
    <div class="custom-star-rating__skeleton-text"></div>
  </div>
  <div class="custom-star-rating__stars"></div>
  <span class="custom-star-rating__text"></span>
</div>

<script>
(function() {
  function extractYotpoData() {
    // Try multiple selectors to find the review text
    let yotpoText = null;
    const selectors = [
      '.yotpo-bottom-line-basic-text',
      '.yotpo-bottomline .text-m',
      '.yotpo-bottomline-box-1 .text-m',
      '[class*="yotpo"][class*="bottom"]',
      '.yotpo .text-m'
    ];

    for (let selector of selectors) {
      yotpoText = document.querySelector(selector);
      if (yotpoText && yotpoText.textContent.toLowerCase().includes('review')) {
        break;
      } else {
        yotpoText = null;
      }
    }

    // If still not found, search all Yotpo elements for review text
    if (!yotpoText) {
      const allYotpo = document.querySelectorAll('[class*="yotpo"]');

      for (let element of allYotpo) {
        const text = (element.textContent || '').trim();

        // Look for review text
        if (text.toLowerCase().includes('review')) {
          yotpoText = element;
          break;
        }
      }
    }

    if (!yotpoText) return null;

    const text = yotpoText.textContent || yotpoText.innerText;
    const countMatch = text.match(/(\d+)\s+review/i);

    if (!countMatch) return null;

    const reviewCount = parseInt(countMatch[1], 10);

    // Extract rating - PRIORITIZE the score element as it's most reliable
    let rating = 0;

    // FIRST: Try to find rating in the bottom-line score text (most reliable)
    const scoreSelectors = [
      '.yotpo-bottom-line-score',
      '.yotpo-sr-bottom-line-score',
      '[class*="bottom-line"][class*="score"]'
    ];

    for (let selector of scoreSelectors) {
      const scoreElement = document.querySelector(selector);
      if (scoreElement) {
        const scoreText = (scoreElement.textContent || '').trim();
        // Match any number with optional decimal (e.g., "4.9", "5", "3.5")
        const scoreMatch = scoreText.match(/([\d.]+)/);
        if (scoreMatch) {
          const parsedRating = parseFloat(scoreMatch[1]);
          // Validate rating is between 0 and 5
          if (parsedRating >= 0 && parsedRating <= 5) {
            rating = parsedRating;
            break;
          }
        }
      }
    }

    // SECOND: Try to find rating in aria-label as fallback
    if (!rating) {
      const ariaElements = document.querySelectorAll('[aria-label*="star"]');
      for (let el of ariaElements) {
        const ariaLabel = el.getAttribute('aria-label') || '';
        const ratingMatch = ariaLabel.match(/([\d.]+)\s+(?:out|star)/i);
        if (ratingMatch) {
          rating = parseFloat(ratingMatch[1]);
          break;
        }
      }
    }

    // Fallback: count filled stars
    if (!rating) {
      const allStarSelectors = [
        '.yotpo-icon-star:not(.yotpo-icon-empty-star)',
        '[class*="star"][class*="filled"]',
        '.yotpo-star.filled'
      ];

      for (let selector of allStarSelectors) {
        const filledStars = document.querySelectorAll(selector);
        if (filledStars.length > 0 && filledStars.length <= 5) {
          rating = filledStars.length;
          break;
        }
      }
    }

    // Final fallback: default to 5.0 if we have reviews but no rating
    if (!rating && reviewCount > 0) {
      rating = 5.0;
    }

    return { rating, reviewCount };
  }

  function renderStars(rating) {
    const starsHtml = [];
    for (let i = 1; i <= 5; i++) {
      const starValue = i;
      const fillPercentage = Math.min(100, Math.max(0, (rating - (starValue - 1)) * 100));

      let starMarkup = '';
      if (fillPercentage === 100) {
        // Fully filled star
        starMarkup = `
          <svg class="custom-star-rating__star filled" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
        `;
      } else if (fillPercentage === 0) {
        // Empty star
        starMarkup = `
          <svg class="custom-star-rating__star" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z"/>
          </svg>
        `;
      } else {
        // Partially filled star - create unique gradient
        const gradientId = 'star-gradient-' + i + '-' + Math.round(fillPercentage);
        starMarkup = `
          <svg class="custom-star-rating__star partial" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <defs>
              <linearGradient id="${gradientId}">
                <stop offset="${fillPercentage}%" stop-color="#ffa500"/>
                <stop offset="${fillPercentage}%" stop-color="#e0e0e0"/>
              </linearGradient>
            </defs>
            <path d="M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z" fill="url(#${gradientId})"/>
          </svg>
        `;
      }

      starsHtml.push(starMarkup);
    }
    return starsHtml.join('');
  }

  let hasLoaded = false;

  function updateCustomRating() {
    if (hasLoaded) return;

    const data = extractYotpoData();
    if (!data || data.reviewCount === 0) return;

    const customRating = document.querySelector('.custom-star-rating');
    if (!customRating) return;

    const starsContainer = customRating.querySelector('.custom-star-rating__stars');
    const textContainer = customRating.querySelector('.custom-star-rating__text');

    if (starsContainer && textContainer) {
      starsContainer.innerHTML = renderStars(data.rating);
      textContainer.textContent = `${data.rating.toFixed(1)} (${data.reviewCount} ${data.reviewCount === 1 ? 'review' : 'reviews'})`;
      customRating.classList.add('loaded');
      hasLoaded = true;

      // Add click handler to scroll to reviews
      customRating.addEventListener('click', function() {
        // Find the reviews section (not the star rating widget)
        const reviewsSelectors = [
          '#yotpo-app',
          '.yotpo-main-widget',
          '#yotpo-reviews-widget',
          '[id*="yotpo-reviews"]',
          '[class*="yotpo"][class*="widget"]:not([class*="star-ratings"])',
          '.yotpo-reviews-carousel'
        ];

        let reviewsSection = null;
        for (let selector of reviewsSelectors) {
          const element = document.querySelector(selector);
          if (element && element.offsetHeight > 50) { // Make sure it exists and is visible
            reviewsSection = element;
            break;
          }
        }

        if (reviewsSection) {
          const offset = 80;
          const elementPosition = reviewsSection.getBoundingClientRect().top;
          const offsetPosition = elementPosition + window.scrollY - offset;

          window.scrollTo({
            top: offsetPosition,
            behavior: 'smooth'
          });
        } else {
          console.log('Reviews section not found');
        }
      });

      // Hide the original Yotpo star rating widget and its parent container
      const productForm = document.querySelector('product-form, .product-form');
      if (productForm) {
        // Hide Yotpo widgets
        const yotpoWidgets = productForm.querySelectorAll('.yotpo-reviews-star-ratings-widget, .yotpo-widget-instance');
        yotpoWidgets.forEach(el => {
          el.style.display = 'none';

          // Also hide the parent app block container
          const parentBlock = el.closest('.product-info__block-item[data-block-type="@app"]');
          if (parentBlock) {
            parentBlock.style.display = 'none';
          }
        });
      }
    }
  }

  // Wait 3 seconds for Yotpo to load, then update
  setTimeout(updateCustomRating, 3000);
})();
</script>
