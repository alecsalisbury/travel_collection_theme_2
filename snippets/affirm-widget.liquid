{% comment %}
  Affirm Official Widget
  Uses Affirm's built-in promotional messaging widget
  Automatically fetches and displays accurate monthly payments from Affirm's API
{% endcomment %}

{%- assign selected_variant = product.selected_or_first_available_variant -%}
{%- assign price = selected_variant.price -%}

<div class="affirm-widget-container" style="margin: 12px 0;">
  {%- comment -%}
    Affirm's official promotional messaging widget
    - Automatically displays accurate monthly payment from Affirm's API
    - Updates when affirm.ui.refresh() is called
  {%- endcomment -%}
  <p class="affirm-as-low-as"
     data-page-type="product"
     data-amount="{{ price }}"
     data-affirm-color="blue"
     data-learnmore-show="false">
  </p>

  {%- comment -%}
    "Check your purchasing power" link
  {%- endcomment -%}
  <a class="affirm-check-power-link"
     href="#"
     onclick="affirm.ui.ready(function() { affirm.ui.prequal.show({ amount: {{ price }} }); }); return false;"
     style="display: inline-block; margin-top: 4px; color: #08c; font-size: inherit; text-decoration: none; cursor: pointer;"
     onmouseover="this.style.textDecoration='underline'"
     onmouseout="this.style.textDecoration='none'"
     aria-label="Check your purchasing power - Learn more about Affirm Financing (opens in modal)">
    Check your purchasing power
  </a>
</div>

<script>
(function() {
  console.log('[AFFIRM WIDGET] Initialized with price:', {{ price }});

  var refreshTimer = null;
  var lastPrice = {{ price }};

  // Debounced refresh to prevent multiple rapid calls
  function debounceRefresh(newPrice) {
    // Skip if price hasn't changed
    if (newPrice === lastPrice) {
      console.log('[AFFIRM WIDGET] Price unchanged, skipping refresh');
      return;
    }

    lastPrice = newPrice;

    // Clear any pending refresh
    if (refreshTimer) {
      clearTimeout(refreshTimer);
    }

    // Schedule refresh
    refreshTimer = setTimeout(function() {
      console.log('[AFFIRM WIDGET] Refreshing UI for price:', newPrice);
      if (window.affirm && window.affirm.ui && window.affirm.ui.refresh) {
        affirm.ui.ready(function() {
          affirm.ui.refresh();
        });
      }
      refreshTimer = null;
    }, 100); // Wait 100ms before refreshing
  }

  // Update Affirm widget when variant changes
  function updateAffirmWidget(newPrice) {
    console.log('[AFFIRM WIDGET] Updating price to:', newPrice);

    // Update the affirm-as-low-as element
    var affirmWidget = document.querySelector('.affirm-as-low-as');
    if (affirmWidget) {
      affirmWidget.setAttribute('data-amount', newPrice);
    }

    // Update the prequal link
    var prqualLink = document.querySelector('.affirm-check-power-link');
    if (prqualLink) {
      prqualLink.onclick = function() {
        affirm.ui.ready(function() {
          affirm.ui.prequal.show({ amount: newPrice });
        });
        return false;
      };
    }

    // Debounced refresh
    debounceRefresh(newPrice);
  }

  // Listen for variant changes (only need one listener)
  var variantHandler = function(e) {
    if (e.detail && e.detail.variant && e.detail.variant.price) {
      updateAffirmWidget(e.detail.variant.price);
    }
  };

  document.addEventListener('variant:changed', variantHandler);
  document.addEventListener('product:variant:change', variantHandler);

  // Re-initialize after DOM changes (debounced)
  document.addEventListener('product:rerendered', function() {
    debounceRefresh(lastPrice);
  });
})();
</script>